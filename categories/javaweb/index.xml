<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Javaweb on Day Day Up</title>
        <link>http://localhost:1313/categories/javaweb/</link>
        <description>Recent content in Javaweb on Day Day Up</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>written by xiegl6</copyright>
        <lastBuildDate>Mon, 29 Apr 2024 11:39:09 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/javaweb/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>初识springboot</title>
        <link>http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/</link>
        <pubDate>Mon, 29 Apr 2024 11:39:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/</guid>
        <description>&lt;h1 id=&#34;springboot基础&#34;&gt;
    &lt;a href=&#34;#springboot%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;
    SpringBoot基础
&lt;/h1&gt;&lt;h2 id=&#34;课程内容&#34;&gt;
    &lt;a href=&#34;#%e8%af%be%e7%a8%8b%e5%86%85%e5%ae%b9&#34;&gt;#&lt;/a&gt;
    课程内容
&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SpringBootWeb入门&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP协议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web服务器-Tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前言&#34;&gt;
    &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34;&gt;#&lt;/a&gt;
    前言
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221130095316032.png&#34;
	width=&#34;1264&#34;
	height=&#34;591&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221130095316032_hu0b9d68a325543f22c595bb355988e336_68015_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221130095316032_hu0b9d68a325543f22c595bb355988e336_68015_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130095316032&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;213&#34;
		data-flex-basis=&#34;513px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下面我们将进入SpringBoot基础阶段的学习。&lt;/p&gt;
&lt;p&gt;在没有正式的学习SpringBoot之前，我们要先来了解下什么是Spring。&lt;/p&gt;
&lt;p&gt;我们可以打开Spring的官网(&lt;a class=&#34;link&#34; href=&#34;https://spring.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://spring.io&lt;/a&gt;)，去看一下Spring的简介：Spring makes Java simple。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222738668.png&#34;
	width=&#34;1896&#34;
	height=&#34;598&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222738668_hu3604297292dcaac0cdc7f74e0f9f42ca_62928_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222738668_hu3604297292dcaac0cdc7f74e0f9f42ca_62928_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;317&#34;
		data-flex-basis=&#34;760px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Spring的官方提供很多开源的项目，我们可以点击上面的projects，看到spring家族旗下的项目，按照流行程度排序为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222925923.png&#34;
	width=&#34;1084&#34;
	height=&#34;902&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222925923_hub7300cacd069450727f1c1ac548017e5_92126_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222925923_hub7300cacd069450727f1c1ac548017e5_92126_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;288px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Spring发展到今天已经形成了一种开发生态圈，Spring提供了若干个子项目，每个项目用于完成特定的功能。而我们在项目开发时，一般会偏向于选择这一套spring家族的技术，来解决对应领域的问题，那我们称这一套技术为&lt;strong&gt;spring全家桶&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222609699.png&#34;
	width=&#34;1179&#34;
	height=&#34;460&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222609699_hu094ee2ca8e001a198647890e7f8c64ac_146636_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617222609699_hu094ee2ca8e001a198647890e7f8c64ac_146636_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;256&#34;
		data-flex-basis=&#34;615px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;而Spring家族旗下这么多的技术，最基础、最核心的是 SpringFramework。其他的spring家族的技术，都是基于SpringFramework的，SpringFramework中提供很多实用功能，如：依赖注入、事务管理、web开发支持、数据访问、消息服务等等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617224427947.png&#34;
	width=&#34;1222&#34;
	height=&#34;579&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617224427947_hu359376bd12c4b696dfe061f4274c7b1a_142614_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220617224427947_hu359376bd12c4b696dfe061f4274c7b1a_142614_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;506px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;而如果我们在项目中，直接基于SpringFramework进行开发，存在两个问题：配置繁琐、入门难度大。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823185227296.png&#34;
	width=&#34;1414&#34;
	height=&#34;454&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823185227296_hu33a1c06d971f0c428a69e8675cc89ae2_142179_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823185227296_hu33a1c06d971f0c428a69e8675cc89ae2_142179_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;311&#34;
		data-flex-basis=&#34;747px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;所以基于此呢，spring官方推荐我们从另外一个项目开始学习，那就是目前最火爆的SpringBoot。&lt;/p&gt;
&lt;p&gt;通过springboot就可以快速的帮我们构建应用程序，所以springboot呢，最大的特点有两个 ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简化配置&lt;/li&gt;
&lt;li&gt;快速开发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spring Boot 可以帮助我们非常快速的构建应用程序、简化开发、提高效率 。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们就直接通过一个SpringBoot的web入门程序，让大家快速感受一下，基于SpringBoot进行Web开发的便捷性。&lt;/p&gt;
&lt;h2 id=&#34;1-springbootweb快速入门&#34;&gt;
    &lt;a href=&#34;#1-springbootweb%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8&#34;&gt;#&lt;/a&gt;
    1. SpringBootWeb快速入门
&lt;/h2&gt;&lt;h3 id=&#34;11-需求&#34;&gt;
    &lt;a href=&#34;#11-%e9%9c%80%e6%b1%82&#34;&gt;#&lt;/a&gt;
    1.1 需求
&lt;/h3&gt;&lt;p&gt;需求：基于SpringBoot的方式开发一个web应用，浏览器发起请求/hello后，给浏览器返回字符串 “Hello World ~”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823191003444.png&#34;
	width=&#34;1443&#34;
	height=&#34;228&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823191003444_hu2fbf046706b7c6c0e5bf51389ec2d1b6_46145_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823191003444_hu2fbf046706b7c6c0e5bf51389ec2d1b6_46145_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;632&#34;
		data-flex-basis=&#34;1518px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;12-开发步骤&#34;&gt;
    &lt;a href=&#34;#12-%e5%bc%80%e5%8f%91%e6%ad%a5%e9%aa%a4&#34;&gt;#&lt;/a&gt;
    1.2 开发步骤
&lt;/h3&gt;&lt;p&gt;第1步：创建SpringBoot工程项目&lt;/p&gt;
&lt;p&gt;第2步：定义HelloController类，添加方法hello，并添加注解&lt;/p&gt;
&lt;p&gt;第3步：测试运行&lt;/p&gt;
&lt;h4 id=&#34;121-创建springboot工程需要联网&#34;&gt;
    &lt;a href=&#34;#121-%e5%88%9b%e5%bb%baspringboot%e5%b7%a5%e7%a8%8b%e9%9c%80%e8%a6%81%e8%81%94%e7%bd%91&#34;&gt;#&lt;/a&gt;
    1.2.1 创建SpringBoot工程（需要联网）
&lt;/h4&gt;&lt;p&gt;基于Spring官方骨架，创建SpringBoot工程。&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201184702136.png&#34; alt=&#34;image-20221201184702136&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;基本信息描述完毕之后，勾选web开发相关依赖。&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201184850248.png&#34; alt=&#34;image-20221201184850248&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;点击Finish之后，就会联网创建这个SpringBoot工程，创建好之后，结构如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;==注意：在联网创建过程中，会下载相关资源(请耐心等待)==&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201185910596.png&#34;
	width=&#34;1525&#34;
	height=&#34;463&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201185910596_hufbee21fb4c88ebe56d42d86d2894fb92_77893_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201185910596_hufbee21fb4c88ebe56d42d86d2894fb92_77893_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201185910596&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;329&#34;
		data-flex-basis=&#34;790px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;122-定义请求处理类&#34;&gt;
    &lt;a href=&#34;#122-%e5%ae%9a%e4%b9%89%e8%af%b7%e6%b1%82%e5%a4%84%e7%90%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;
    1.2.2 定义请求处理类
&lt;/h4&gt;&lt;p&gt;在com.itheima这个包下创建一个子包controller&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201190541295.png&#34; alt=&#34;image-20221201190541295&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;然后在controller包下新建一个类：HelloController&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201190825439.png&#34; alt=&#34;image-20221201190825439&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;com.itheima.controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.springframework.web.bind.annotation.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@RestController&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloController&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World ~&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World ~&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;123-运行测试&#34;&gt;
    &lt;a href=&#34;#123-%e8%bf%90%e8%a1%8c%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;
    1.2.3 运行测试
&lt;/h4&gt;&lt;p&gt;运行SpringBoot自动生成的引导类&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201191028124.png&#34;
	width=&#34;1525&#34;
	height=&#34;767&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201191028124_hub106aee96c2573430ac33af2997398a9_106569_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201191028124_hub106aee96c2573430ac33af2997398a9_106569_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201191028124&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;477px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201191348924.png&#34;
	width=&#34;1867&#34;
	height=&#34;905&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201191348924_hu2916eb1130e12f3b8a26391aefe97e45_175778_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201191348924_hu2916eb1130e12f3b8a26391aefe97e45_175778_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201191348924&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;495px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;打开浏览器，输入 &lt;code&gt;http://localhost:8080/hello&lt;/code&gt;&lt;/p&gt;
&lt;img src=&#34;assets/image-20220823195048415.png&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;h3 id=&#34;13-web分析&#34;&gt;
    &lt;a href=&#34;#13-web%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;
    1.3 Web分析
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201224603497.png&#34;
	width=&#34;1213&#34;
	height=&#34;386&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201224603497_hu760abaacbbad34148244439bdbbde385_30758_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221201224603497_hu760abaacbbad34148244439bdbbde385_30758_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201224603497&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;314&#34;
		data-flex-basis=&#34;754px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;浏览器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;输入网址：&lt;code&gt;http://192.168.100.11:8080/hello&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过IP地址192.168.100.11定位到网络上的一台计算机&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们之前在浏览器中输入的localhost，就是127.0.0.1（本机）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过端口号8080找到计算机上运行的程序&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;localhost:8080&lt;/code&gt;  , 意思是在本地计算机中找到正在运行的8080端口的程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/hello是请求资源位置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源：对计算机而言资源就是数据
&lt;ul&gt;
&lt;li&gt;web资源：通过网络可以访问到的资源（通常是指存放在服务器上的数据）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;localhost:8080/hello&lt;/code&gt; ，意思是向本地计算机中的8080端口程序，获取资源位置是/hello的数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8080端口程序，在服务器找/hello位置的资源数据，发给浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;服务器：（可以理解为ServerSocket）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收到浏览器发送的信息（如：/hello）&lt;/li&gt;
&lt;li&gt;在服务器上找到/hello的资源&lt;/li&gt;
&lt;li&gt;把资源发送给浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;我们在JavaSE阶段学习网络编程时，有讲过网络三要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP  ：网络中计算机的唯一标识&lt;/li&gt;
&lt;li&gt;端口 ：计算机中运行程序的唯一标识&lt;/li&gt;
&lt;li&gt;协议 ：网络中计算机之间交互的规则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;问题：浏览器和服务器两端进行数据交互，使用什么协议？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答案：http协议&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-http协议&#34;&gt;
    &lt;a href=&#34;#2-http%e5%8d%8f%e8%ae%ae&#34;&gt;#&lt;/a&gt;
    2. HTTP协议
&lt;/h2&gt;&lt;h3 id=&#34;21-http-概述&#34;&gt;
    &lt;a href=&#34;#21-http-%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;
    2.1 HTTP-概述
&lt;/h3&gt;&lt;h4 id=&#34;211-介绍&#34;&gt;
    &lt;a href=&#34;#211-%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;
    2.1.1 介绍
&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823200024507.png&#34;
	width=&#34;1386&#34;
	height=&#34;236&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823200024507_hu03aacaabbb67746412dd48543573662f_54646_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823200024507_hu03aacaabbb67746412dd48543573662f_54646_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;587&#34;
		data-flex-basis=&#34;1409px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;HTTP：Hyper Text Transfer Protocol(超文本传输协议)，规定了浏览器与服务器之间数据传输的规则。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http是互联网上应用最为广泛的一种网络协议&lt;/li&gt;
&lt;li&gt;http协议要求：浏览器在向服务器发送请求数据时，或是服务器在向浏览器发送响应数据时，都必须按照固定的格式进行数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果想知道http协议的数据传输格式有哪些，可以打开浏览器，点击&lt;code&gt;F12&lt;/code&gt;打开开发者工具，点击&lt;code&gt;Network&lt;/code&gt;来查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202105735230.png&#34;
	width=&#34;1667&#34;
	height=&#34;945&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202105735230_hu893f7c2c991f0ed4b9b1a83b6232a670_97698_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202105735230_hu893f7c2c991f0ed4b9b1a83b6232a670_97698_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202105735230&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;423px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;浏览器向服务器进行请求时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器按照固定的格式进行解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202111044434.png&#34;
	width=&#34;1102&#34;
	height=&#34;338&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202111044434_hu177c8311e5a3ac911f029e8d6c3bd12d_42500_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202111044434_hu177c8311e5a3ac911f029e8d6c3bd12d_42500_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202111044434&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;326&#34;
		data-flex-basis=&#34;782px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;服务器向浏览器进行响应时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器按照固定的格式进行解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202111307819.png&#34;
	width=&#34;1057&#34;
	height=&#34;161&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202111307819_hue1dd3267b959673f815ccdbe7b19a28b_20408_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202111307819_hue1dd3267b959673f815ccdbe7b19a28b_20408_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202111307819&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;656&#34;
		data-flex-basis=&#34;1575px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，我们学习HTTP主要就是学习请求和响应数据的具体格式内容。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;222-特点&#34;&gt;
    &lt;a href=&#34;#222-%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;
    2.2.2 特点
&lt;/h4&gt;&lt;p&gt;我们刚才初步认识了HTTP协议，那么我们在看看HTTP协议有哪些特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**基于TCP协议: **   面向连接，安全&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TCP是一种面向连接的(建立连接之前是需要经过三次握手)、可靠的、基于字节流的传输层通信协议，在数据传输方面更安全&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基于请求-响应模型:&lt;/strong&gt;   一次请求对应一次响应（先请求后响应）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;请求和响应是一一对应关系，没有请求，就没有响应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTTP协议是无状态协议:&lt;/strong&gt;  对于数据没有记忆能力。每次请求-响应都是独立的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无状态指的是客户端发送HTTP请求给服务端之后，服务端根据请求响应数据，响应完后，不会记录任何信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点:  多次请求间不能共享数据&lt;/li&gt;
&lt;li&gt;优点:  速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请求之间无法共享数据会引发的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如：京东购物。加入购物车和去购物车结算是两次请求&lt;/li&gt;
&lt;li&gt;由于HTTP协议的无状态特性，加入购物车请求响应结束后，并未记录加入购物车是何商品&lt;/li&gt;
&lt;li&gt;发起去购物车结算的请求后，因为无法获取哪些商品加入了购物车，会导致此次请求无法正确展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体使用的时候，我们发现京东是可以正常展示数据的，原因是Java早已考虑到这个问题，并提出了使用会话技术(Cookie、Session)来解决这个问题。具体如何来做，我们后面课程中会讲到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;刚才提到HTTP协议是规定了请求和响应数据的格式，那具体的格式是什么呢?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-http-请求协议&#34;&gt;
    &lt;a href=&#34;#22-http-%e8%af%b7%e6%b1%82%e5%8d%8f%e8%ae%ae&#34;&gt;#&lt;/a&gt;
    2.2 HTTP-请求协议
&lt;/h3&gt;&lt;p&gt;浏览器和服务器是按照HTTP协议进行数据通信的。&lt;/p&gt;
&lt;p&gt;HTTP协议又分为：请求协议和响应协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求协议：浏览器将数据以请求格式发送到服务器
&lt;ul&gt;
&lt;li&gt;包括：&lt;strong&gt;请求行&lt;/strong&gt;、&lt;strong&gt;请求头&lt;/strong&gt; 、&lt;strong&gt;请求体&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;响应协议：服务器将数据以响应格式返回给浏览器
&lt;ul&gt;
&lt;li&gt;包括：&lt;strong&gt;响应行&lt;/strong&gt; 、&lt;strong&gt;响应头&lt;/strong&gt; 、&lt;strong&gt;响应体&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在HTTP1.1版本中，浏览器访问服务器的几种方式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;请求方式&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;请求说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;GET&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;获取资源。&lt;br/&gt;向特定的资源发出请求。例：http://www.baidu.com/s?wd=itheima&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;传输实体主体。&lt;br/&gt;向指定资源提交数据进行处理请求（例：上传文件），数据被包含在请求体中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;OPTIONS&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;返回服务器针对特定资源所支持的HTTP请求方式。&lt;br/&gt;因为并不是所有的服务器都支持规定的方法，为了安全有些服务器可能会禁止掉一些方法，例如：DELETE、PUT等。那么OPTIONS就是用来询问服务器支持的方法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;HEAD&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;获得报文首部。&lt;br/&gt;HEAD方法类似GET方法，但是不同的是HEAD方法不要求返回数据。通常用于确认URI的有效性及资源更新时间等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;PUT&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;传输文件。&lt;br/&gt;PUT方法用来传输文件。类似FTP协议，文件内容包含在请求报文的实体中，然后请求保存到URL指定的服务器位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DELETE&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除文件。&lt;br/&gt;请求服务器删除Request-URI所标识的资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;TRACE&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;追踪路径。&lt;br/&gt;回显服务器收到的请求，主要用于测试或诊断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;CONNECT&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;要求用隧道协议连接代理。&lt;br/&gt;HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在我们实际应用中常用的也就是 ：&lt;strong&gt;GET、POST&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GET方式的请求协议：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823200708026.png&#34;
	width=&#34;1194&#34;
	height=&#34;231&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823200708026_hua150f40584b8bd8e9d77d1aa2b10d4eb_90091_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823200708026_hua150f40584b8bd8e9d77d1aa2b10d4eb_90091_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;516&#34;
		data-flex-basis=&#34;1240px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;请求行 ：HTTP请求中的第一行数据。由：&lt;code&gt;请求方式&lt;/code&gt;、&lt;code&gt;资源路径&lt;/code&gt;、&lt;code&gt;协议/版本&lt;/code&gt;组成（之间使用空格分隔）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求方式：GET&lt;/li&gt;
&lt;li&gt;资源路径：/brand/findAll?name=OPPO&amp;amp;status=1
&lt;ul&gt;
&lt;li&gt;请求路径：/brand/findAll&lt;/li&gt;
&lt;li&gt;请求参数：name=OPPO&amp;amp;status=1
&lt;ul&gt;
&lt;li&gt;请求参数是以key=value形式出现&lt;/li&gt;
&lt;li&gt;多个请求参数之间使用&lt;code&gt;&amp;amp;&lt;/code&gt;连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;请求路径和请求参数之间使用&lt;code&gt;?&lt;/code&gt;连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;协议/版本：HTTP/1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请求头 ：第二行开始，上图黄色部分内容就是请求头。格式为key: value形式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http是个无状态的协议，所以在请求头设置浏览器的一些自身信息和想要响应的形式。这样服务器在收到信息后，就可以知道是谁，想干什么了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的HTTP请求头有:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: 表示请求的主机名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: 浏览器版本。 例如：Chrome浏览器的标识类似Mozilla/5.0 ...Chrome/79 ，IE浏览器的标识类似Mozilla/5.0 (Windows NT ...)like Gecko
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept：表示浏览器能接收的资源类型，如text/*，image/*或者*/*表示所有；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language：表示浏览器偏好的语言，服务器可以据此返回不同语言的网页；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding：表示浏览器可以支持的压缩类型，例如gzip, deflate等。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type：请求主体的数据类型
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length：数据主体的大小（单位：字节）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;举例说明：服务端可以根据请求头中的内容来获取客户端的相关信息，有了这些信息服务端就可以处理不同的业务需求。&lt;/p&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同浏览器解析HTML和CSS标签的结果会有不一致，所以就会导致相同的代码在不同的浏览器会出现不同的效果&lt;/li&gt;
&lt;li&gt;服务端根据客户端请求头中的数据获取到客户端的浏览器类型，就可以根据不同的浏览器设置不同的代码来达到一致的效果（这就是我们常说的浏览器兼容问题）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;请求体 ：存储请求参数
&lt;ul&gt;
&lt;li&gt;GET请求的请求参数在请求行中，故不需要设置请求体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;POST方式的请求协议：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823201303601.png&#34;
	width=&#34;1194&#34;
	height=&#34;393&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823201303601_hu0edc65902750f695637ac8cb1a05ae98_134194_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823201303601_hu0edc65902750f695637ac8cb1a05ae98_134194_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;303&#34;
		data-flex-basis=&#34;729px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求行(以上图中红色部分)：包含请求方式、资源路径、协议/版本
&lt;ul&gt;
&lt;li&gt;请求方式：POST&lt;/li&gt;
&lt;li&gt;资源路径：/brand&lt;/li&gt;
&lt;li&gt;协议/版本：HTTP/1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;请求头(以上图中黄色部分)&lt;/li&gt;
&lt;li&gt;请求体(以上图中绿色部分) ：存储请求参数
&lt;ul&gt;
&lt;li&gt;请求体和请求头之间是有一个空行隔开（作用：用于标记请求头结束）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GET请求和POST请求的区别：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;区别方式&lt;/th&gt;
&lt;th&gt;GET请求&lt;/th&gt;
&lt;th&gt;POST请求&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;请求参数&lt;/td&gt;
&lt;td&gt;请求参数在请求行中。&lt;br/&gt;例：/brand/findAll?name=OPPO&amp;amp;status=1&lt;/td&gt;
&lt;td&gt;请求参数在请求体中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;请求参数长度&lt;/td&gt;
&lt;td&gt;请求参数长度有限制(浏览器不同限制也不同)&lt;/td&gt;
&lt;td&gt;请求参数长度没有限制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安全性&lt;/td&gt;
&lt;td&gt;安全性低。原因：请求参数暴露在浏览器地址栏中。&lt;/td&gt;
&lt;td&gt;安全性相对高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;23-http-响应协议&#34;&gt;
    &lt;a href=&#34;#23-http-%e5%93%8d%e5%ba%94%e5%8d%8f%e8%ae%ae&#34;&gt;#&lt;/a&gt;
    2.3 HTTP-响应协议
&lt;/h3&gt;&lt;h4 id=&#34;231-格式介绍&#34;&gt;
    &lt;a href=&#34;#231-%e6%a0%bc%e5%bc%8f%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;
    2.3.1 格式介绍
&lt;/h4&gt;&lt;p&gt;与HTTP的请求一样，HTTP响应的数据也分为3部分：&lt;strong&gt;响应行&lt;/strong&gt;、&lt;strong&gt;响应头&lt;/strong&gt; 、&lt;strong&gt;响应体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823202344149.png&#34;
	width=&#34;1168&#34;
	height=&#34;323&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823202344149_hu254be0119cb184285bbbfeada0641e46_79577_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220823202344149_hu254be0119cb184285bbbfeada0641e46_79577_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;361&#34;
		data-flex-basis=&#34;867px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;响应行(以上图中红色部分)：响应数据的第一行。响应行由&lt;code&gt;协议及版本&lt;/code&gt;、&lt;code&gt;响应状态码&lt;/code&gt;、&lt;code&gt;状态码描述&lt;/code&gt;组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;协议/版本：HTTP/1.1&lt;/li&gt;
&lt;li&gt;响应状态码：200&lt;/li&gt;
&lt;li&gt;状态码描述：OK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;响应头(以上图中黄色部分)：响应数据的第二行开始。格式为key：value形式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http是个无状态的协议，所以可以在请求头和响应头中设置一些信息和想要执行的动作，这样，对方在收到信息后，就可以知道你是谁，你想干什么&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的HTTP响应头有:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type：表示该响应内容的类型，例如text/html，image/jpeg ；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length：表示该响应内容的长度（字节数）；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Encoding：表示该响应压缩算法，例如gzip ；
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Cache-Control：指示客户端应如何缓存，例如max-age=300表示可以最多缓存300秒 ;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Set-Cookie: 告诉浏览器为当前页面所在的域设置cookie ;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;响应体(以上图中绿色部分)： 响应数据的最后一部分。存储响应的数据
&lt;ul&gt;
&lt;li&gt;响应体和响应头之间有一个空行隔开（作用：用于标记响应头结束）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;232-响应状态码&#34;&gt;
    &lt;a href=&#34;#232-%e5%93%8d%e5%ba%94%e7%8a%b6%e6%80%81%e7%a0%81&#34;&gt;#&lt;/a&gt;
    2.3.2 响应状态码
&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状态码分类&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1xx&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;响应中&lt;/strong&gt; &amp;mdash; 临时状态码。表示请求已经接受，告诉客户端应该继续请求或者如果已经完成则忽略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2xx&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;成功&lt;/strong&gt; &amp;mdash; 表示请求已经被成功接收，处理已完成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3xx&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;重定向&lt;/strong&gt; &amp;mdash; 重定向到其它地方，让客户端再发起一个请求以完成整个处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4xx&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;客户端错误&lt;/strong&gt; &amp;mdash; 处理发生错误，责任在客户端，如：客户端的请求一个不存在的资源，客户端未被授权，禁止访问等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5xx&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;服务器端错误&lt;/strong&gt; &amp;mdash; 处理发生错误，责任在服务端，如：服务端抛出异常，路由出错，HTTP版本不支持等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;参考: 资料/SpringbootWeb/响应状态码.md&lt;/p&gt;
&lt;p&gt;关于响应状态码，我们先主要认识三个状态码，其余的等后期用到了再去掌握：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200    ok   客户端请求成功&lt;/li&gt;
&lt;li&gt;404  Not Found  请求资源不存在&lt;/li&gt;
&lt;li&gt;500  Internal Server Error  服务端发生不可预期的错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;24-http-协议解析&#34;&gt;
    &lt;a href=&#34;#24-http-%e5%8d%8f%e8%ae%ae%e8%a7%a3%e6%9e%90&#34;&gt;#&lt;/a&gt;
    2.4 HTTP-协议解析
&lt;/h3&gt;&lt;p&gt;将资料中准备好的Demo工程，导入到我们的IDEA中，有一个Server.java类，这里面就是自定义的一个服务器代码，主要使用到的是&lt;code&gt;ServerSocket&lt;/code&gt;和&lt;code&gt;Socket&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;==说明：以下代码大家不需要自己写，我们主要是通过代码，让大家了解到服务器针对HTTP协议的解析机制==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;89
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;com.itheima&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.io.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.net.ServerSocket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.net.Socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.nio.charset.StandardCharsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * 自定义web服务器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerSocket&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerSocket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 监听指定端口&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;server is running...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Socket&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;connected from &amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRemoteSocketAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Socket&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Socket&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getInputStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OutputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ioe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;client disconnected.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OutputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedReader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StandardCharsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;UTF_8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedWriter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OutputStreamWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StandardCharsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;UTF_8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 读取HTTP请求:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;requestOk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;GET / HTTP/1.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;requestOk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(;;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 读取到空行时, HTTP Header读取完毕&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;requestOk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Response OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Response Error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;requestOk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 发送错误响应:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HTTP/1.0 404 Not Found\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Content-Length: 0\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 发送成功响应:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//读取html文件，转换为字符串&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getClassLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;html/a.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedReader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StandardCharsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;UTF_8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HTTP/1.1 200 OK\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Connection: keep-alive\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Content-Type: text/html\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Content-Length: &amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 空行标识Header和Body的分隔&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;启动ServerSocket程序：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202170430928.png&#34;
	width=&#34;1332&#34;
	height=&#34;659&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202170430928_hub2ebecc74692162aa19816030a657697_137105_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202170430928_hub2ebecc74692162aa19816030a657697_137105_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202170430928&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;485px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;浏览器输入：&lt;code&gt;http://localhost:8080&lt;/code&gt;  就会访问到ServerSocket程序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ServerSocket程序，会读取服务器上&lt;code&gt;html/a.html&lt;/code&gt;文件，并把文件数据发送给浏览器&lt;/li&gt;
&lt;li&gt;浏览器接收到a.html文件中的数据后进行解析，显示以下内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202171204705.png&#34;
	width=&#34;705&#34;
	height=&#34;208&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202171204705_huec3b0505bbed112ef020273e5b4be752_21692_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202171204705_huec3b0505bbed112ef020273e5b4be752_21692_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202171204705&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;338&#34;
		data-flex-basis=&#34;813px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;现在大家知道了服务器是可以使用java完成编写，是可以接受页面发送的请求和响应数据给前端浏览器的，而在开发中真正用到的Web服务器，我们不会自己写的，都是使用目前比较流行的web服务器。如：&lt;strong&gt;Tomcat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233452167.png&#34;
	width=&#34;1397&#34;
	height=&#34;504&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233452167_hue3c292354e761b3662241ce7c3d4ee98_129257_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233452167_hue3c292354e761b3662241ce7c3d4ee98_129257_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;277&#34;
		data-flex-basis=&#34;665px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-web服务器-tomcat&#34;&gt;
    &lt;a href=&#34;#3-web%e6%9c%8d%e5%8a%a1%e5%99%a8-tomcat&#34;&gt;#&lt;/a&gt;
    3. WEB服务器-Tomcat
&lt;/h2&gt;&lt;h3 id=&#34;31-简介&#34;&gt;
    &lt;a href=&#34;#31-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;
    3.1 简介
&lt;/h3&gt;&lt;h4 id=&#34;311-服务器概述&#34;&gt;
    &lt;a href=&#34;#311-%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;
    3.1.1 服务器概述
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;服务器硬件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指的也是计算机，只不过服务器要比我们日常使用的计算机大很多。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202173148317.png&#34;
	width=&#34;426&#34;
	height=&#34;446&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202173148317_hu55bd8aa28f4ca40d3ad71c667dc502b1_352966_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202173148317_hu55bd8aa28f4ca40d3ad71c667dc502b1_352966_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202173148317&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;229px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;服务器，也称伺服器。是提供计算服务的设备。由于服务器需要响应服务请求，并进行处理，因此一般来说服务器应具备承担服务并且保障服务的能力。&lt;/p&gt;
&lt;p&gt;服务器的构成包括处理器、硬盘、内存、系统总线等，和通用的计算机架构类似，但是由于需要提供高可靠的服务，因此在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。&lt;/p&gt;
&lt;p&gt;在网络环境下，根据服务器提供的服务类型不同，可分为：文件服务器，数据库服务器，应用程序服务器，WEB服务器等。&lt;/p&gt;
&lt;p&gt;服务器只是一台设备，必须安装服务器软件才能提供相应的服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务器软件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器软件：基于ServerSocket编写的程序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器软件本质是一个运行在服务器设备上的应用程序&lt;/li&gt;
&lt;li&gt;能够接收客户端请求，并根据请求给客户端响应数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/1530625192392.png&#34;
	width=&#34;1386&#34;
	height=&#34;736&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/1530625192392_hu2196a1f7541d5e1fc8115ba24850a55d_34995_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/1530625192392_hu2196a1f7541d5e1fc8115ba24850a55d_34995_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1530625192392&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;451px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;312-web服务器&#34;&gt;
    &lt;a href=&#34;#312-web%e6%9c%8d%e5%8a%a1%e5%99%a8&#34;&gt;#&lt;/a&gt;
    3.1.2 Web服务器
&lt;/h4&gt;&lt;p&gt;Web服务器是一个应用程序(软件)，对HTTP协议的操作进行封装，使得程序员不必直接对协议进行操作(不用程序员自己写代码去解析http协议规则)，让Web开发更加便捷。主要功能是&amp;quot;提供网上信息浏览服务&amp;quot;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233614686.png&#34;
	width=&#34;1307&#34;
	height=&#34;381&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233614686_hudacd582bafa64452c98a97a3fa9a0afc_82498_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233614686_hudacd582bafa64452c98a97a3fa9a0afc_82498_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;343&#34;
		data-flex-basis=&#34;823px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Web服务器是安装在服务器端的一款软件，将来我们把自己写的Web项目部署到Tomcat服务器软件中，当Web服务器软件启动后，部署在Web服务器软件中的页面就可以直接通过浏览器来访问了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web服务器软件使用步骤&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准备静态资源&lt;/li&gt;
&lt;li&gt;下载安装Web服务器软件&lt;/li&gt;
&lt;li&gt;将静态资源部署到Web服务器上&lt;/li&gt;
&lt;li&gt;启动Web服务器使用浏览器访问对应的资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第1步：准备静态资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在提供的资料中找到静态资源文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202180119859.png&#34;
	width=&#34;1044&#34;
	height=&#34;145&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202180119859_hu316fc0af24af8eae1bad38a10e61df75_19841_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202180119859_hu316fc0af24af8eae1bad38a10e61df75_19841_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202180119859&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;720&#34;
		data-flex-basis=&#34;1728px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;第2步：下载安装Web服务器软件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181110555.png&#34;
	width=&#34;1251&#34;
	height=&#34;183&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181110555_huf376b3ab72004d310af3115d7e44905b_34477_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181110555_huf376b3ab72004d310af3115d7e44905b_34477_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202181110555&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;683&#34;
		data-flex-basis=&#34;1640px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;第3步：将静态资源部署到Web服务器上&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202180805686.png&#34;
	width=&#34;1391&#34;
	height=&#34;367&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202180805686_hu9f3ab11a21431d16072f70eaf7d2fbc1_43814_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202180805686_hu9f3ab11a21431d16072f70eaf7d2fbc1_43814_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202180805686&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;379&#34;
		data-flex-basis=&#34;909px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;第4步：启动Web服务器使用浏览器访问对应的资源&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181346327.png&#34;
	width=&#34;835&#34;
	height=&#34;607&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181346327_hufd80e66600d9d86e530d22fc369c6324_86194_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181346327_hufd80e66600d9d86e530d22fc369c6324_86194_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202181346327&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;330px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;浏览器输入：&lt;code&gt;http://localhost:8080/demo/index.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181651469.png&#34;
	width=&#34;1155&#34;
	height=&#34;776&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181651469_hued0066e78a4f96187e3dd9b6f0e0e8fe_158556_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202181651469_hued0066e78a4f96187e3dd9b6f0e0e8fe_158556_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202181651469&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;357px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;上述内容在演示的时候，使用的是Apache下的Tomcat软件，至于Tomcat软件如何使用，后面会详细的讲到。而对于Web服务器来说，实现的方案有很多，Tomcat只是其中的一种，而除了Tomcat以外，还有很多优秀的Web服务器，比如:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233728524.png&#34;
	width=&#34;895&#34;
	height=&#34;229&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233728524_hu9ccf89e70eb4a402c6266121c11a1e20_151210_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233728524_hu9ccf89e70eb4a402c6266121c11a1e20_151210_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220824233728524&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;390&#34;
		data-flex-basis=&#34;937px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Tomcat就是一款软件，我们主要是以学习如何去使用为主。具体我们会从以下这些方向去学习:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简介：初步认识下Tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本使用: 安装、卸载、启动、关闭、配置和项目部署，这些都是对Tomcat的基本操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IDEA中如何创建Maven Web项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IDEA中如何使用Tomcat,后面这两个都是我们以后开发经常会用到的方式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首选我们来认识下Tomcat。&lt;/p&gt;
&lt;h4 id=&#34;313-tomcat&#34;&gt;
    &lt;a href=&#34;#313-tomcat&#34;&gt;#&lt;/a&gt;
    3.1.3 Tomcat
&lt;/h4&gt;&lt;p&gt;Tomcat服务器软件是一个免费的开源的web应用服务器。是Apache软件基金会的一个核心项目。由Apache，Sun和其他一些公司及个人共同开发而成。&lt;/p&gt;
&lt;p&gt;由于Tomcat只支持Servlet/JSP少量JavaEE规范，所以是一个开源免费的轻量级Web服务器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaEE规范：   JavaEE =&amp;gt; Java Enterprise Edition(Java企业版)&lt;/p&gt;
&lt;p&gt;JavaEE规范就是指Java企业级开发的技术规范总和。包含13项技术规范：JDBC、JNDI、EJB、RMI、JSP、Servlet、XML、JMS、Java IDL、JTS、JTA、JavaMail、JAF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为Tomcat支持Servlet/JSP规范，所以Tomcat也被称为Web容器、Servlet容器。JavaWeb程序需要依赖Tomcat才能运行。&lt;/p&gt;
&lt;p&gt;Tomcat的官网: &lt;a class=&#34;link&#34; href=&#34;https://tomcat.apache.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tomcat.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233903517.png&#34;
	width=&#34;446&#34;
	height=&#34;264&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233903517_hu73adaff2fffe278badfdbc6a8dc61942_66342_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824233903517_hu73adaff2fffe278badfdbc6a8dc61942_66342_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220824233903517&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;405px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;32-基本使用&#34;&gt;
    &lt;a href=&#34;#32-%e5%9f%ba%e6%9c%ac%e4%bd%bf%e7%94%a8&#34;&gt;#&lt;/a&gt;
    3.2 基本使用
&lt;/h3&gt;&lt;h4 id=&#34;321-下载&#34;&gt;
    &lt;a href=&#34;#321-%e4%b8%8b%e8%bd%bd&#34;&gt;#&lt;/a&gt;
    3.2.1 下载
&lt;/h4&gt;&lt;p&gt;直接从官方网站下载：https://tomcat.apache.org/download-90.cgi&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234407828.png&#34;
	width=&#34;934&#34;
	height=&#34;818&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234407828_hu15b792da6abb19ba1d7baad8cf71b3ab_129547_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234407828_hu15b792da6abb19ba1d7baad8cf71b3ab_129547_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;114&#34;
		data-flex-basis=&#34;274px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tomcat软件类型说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tar.gz文件，是linux和mac操作系统下的压缩版本&lt;/li&gt;
&lt;li&gt;zip文件，是window操作系统下压缩版本（我们选择zip文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;大家可以自行下载，也可以直接使用资料中已经下载好的资源，&lt;/p&gt;
&lt;p&gt;Tomcat的软件程序  ：/资料/SpringbootWeb/apache-tomcat-9.0.27-windows-x64.zip&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234527743.png&#34;
	width=&#34;531&#34;
	height=&#34;56&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234527743_hu97b6c532712eb1be319a7d7745fe4733_20899_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234527743_hu97b6c532712eb1be319a7d7745fe4733_20899_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;948&#34;
		data-flex-basis=&#34;2275px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;322-安装与卸载&#34;&gt;
    &lt;a href=&#34;#322-%e5%ae%89%e8%a3%85%e4%b8%8e%e5%8d%b8%e8%bd%bd&#34;&gt;#&lt;/a&gt;
    3.2.2 安装与卸载
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;安装:&lt;/strong&gt; Tomcat是绿色版，直接解压即安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在E盘的develop目录下，将&lt;code&gt;apache-tomcat-9.0.27-windows-x64.zip&lt;/code&gt;进行解压缩，会得到一个&lt;code&gt;apache-tomcat-9.0.27&lt;/code&gt;的目录，Tomcat就已经安装成功。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202184545321.png&#34;
	width=&#34;948&#34;
	height=&#34;266&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202184545321_hu50a5379ff15c9fc2a17ce84a9189c19c_52311_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202184545321_hu50a5379ff15c9fc2a17ce84a9189c19c_52311_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202184545321&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;356&#34;
		data-flex-basis=&#34;855px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;==注意，Tomcat在解压缩的时候，解压所在的目录可以任意，但最好解压到一个不包含中文和空格的目录，因为后期在部署项目的时候，如果路径有中文或者空格可能会导致程序部署失败。==&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;apache-tomcat-9.0.27&lt;/code&gt;目录就能看到如下目录结构，每个目录中包含的内容需要认识下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234652173.png&#34;
	width=&#34;504&#34;
	height=&#34;374&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234652173_huf83ab68a3f1502fa0c0f3004542f5085_58714_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220824234652173_huf83ab68a3f1502fa0c0f3004542f5085_58714_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;323px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;bin：目录下有两类文件，一种是以&lt;code&gt;.bat&lt;/code&gt;结尾的，是Windows系统的可执行文件，一种是以&lt;code&gt;.sh&lt;/code&gt;结尾的，是Linux系统的可执行文件。&lt;/p&gt;
&lt;p&gt;webapps：就是以后项目部署的目录&lt;/p&gt;
&lt;p&gt;**卸载：**卸载比较简单，可以直接删除目录即可&lt;/p&gt;
&lt;h4 id=&#34;323-启动与关闭&#34;&gt;
    &lt;a href=&#34;#323-%e5%90%af%e5%8a%a8%e4%b8%8e%e5%85%b3%e9%97%ad&#34;&gt;#&lt;/a&gt;
    3.2.3 启动与关闭
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;启动Tomcat&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双击tomcat解压目录/bin/&lt;strong&gt;startup.bat&lt;/strong&gt;文件即可启动tomcat&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183201663.png&#34;
	width=&#34;944&#34;
	height=&#34;216&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183201663_hu8ae8241bd47eddc39122f965c58b77d6_26094_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183201663_hu8ae8241bd47eddc39122f965c58b77d6_26094_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202183201663&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;437&#34;
		data-flex-basis=&#34;1048px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;==注意: tomcat服务器启动后,黑窗口不会关闭,只要黑窗口不关闭,就证明tomcat服务器正在运行==&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183409304.png&#34;
	width=&#34;1418&#34;
	height=&#34;479&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183409304_hue337298e58875124428508de2db8bc5c_138200_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183409304_hue337298e58875124428508de2db8bc5c_138200_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202183409304&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;296&#34;
		data-flex-basis=&#34;710px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Tomcat的默认端口为8080，所以在浏览器的地址栏输入：&lt;code&gt;http://127.0.0.1:8080&lt;/code&gt; 即可访问tomcat服务器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;127.0.0.1 也可以使用localhost代替。如：&lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183550682.png&#34;
	width=&#34;1504&#34;
	height=&#34;986&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183550682_hu33f9012300acd730382dcd0d69807478_267369_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202183550682_hu33f9012300acd730382dcd0d69807478_267369_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202183550682&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;366px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能看到以上图片中Apache Tomcat的内容就说明Tomcat已经启动成功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;==注意事项== ：Tomcat启动的过程中，遇到控制台有中文乱码时，可以通常修改conf/logging.prooperties文件解决&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825083848086.png&#34;
	width=&#34;1275&#34;
	height=&#34;90&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825083848086_hu713ff77b1d3ab81b36d2065be2b153c8_14284_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825083848086_hu713ff77b1d3ab81b36d2065be2b153c8_14284_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220825083848086&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1416&#34;
		data-flex-basis=&#34;3400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关闭:&lt;/strong&gt;  关闭有三种方式&lt;/p&gt;
&lt;p&gt;1、强制关闭：直接x掉Tomcat窗口（不建议）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202184753808.png&#34;
	width=&#34;1280&#34;
	height=&#34;479&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202184753808_hu98dc277ebf2cedcac9ba4616aa3826b4_142047_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202184753808_hu98dc277ebf2cedcac9ba4616aa3826b4_142047_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202184753808&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;267&#34;
		data-flex-basis=&#34;641px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2、正常关闭：bin\shutdown.bat&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202185103941.png&#34;
	width=&#34;944&#34;
	height=&#34;335&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202185103941_hu8cb4c892f313d42edd74e66a8169eac7_49175_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202185103941_hu8cb4c892f313d42edd74e66a8169eac7_49175_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202185103941&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;281&#34;
		data-flex-basis=&#34;676px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;3、正常关闭：在Tomcat启动窗口中按下 Ctrl+C&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;说明：如果按下Ctrl+C没有反映，可以多按几次&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;324-常见问题&#34;&gt;
    &lt;a href=&#34;#324-%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;
    3.2.4 常见问题
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;问题1：Tomcat启动时，窗口一闪而过&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查JAVA_HOME环境变量是否正确配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202190033167.png&#34;
	width=&#34;1551&#34;
	height=&#34;814&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202190033167_hube8ad23e265432258164bc30f5d936af_118847_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202190033167_hube8ad23e265432258164bc30f5d936af_118847_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202190033167&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;457px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题2：端口号冲突&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825084104447.png&#34;
	width=&#34;798&#34;
	height=&#34;115&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825084104447_hu18e8802512f27d600e05b7cf5d22a833_121500_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825084104447_hu18e8802512f27d600e05b7cf5d22a833_121500_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220825084104447&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;693&#34;
		data-flex-basis=&#34;1665px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发生问题的原因：Tomcat使用的端口被占用了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决方案：换Tomcat端口号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要想修改Tomcat启动的端口号，需要修改 conf/server.xml文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;assets/image-20220825084017185.png&#34; alt=&#34;image-20220825084017185&#34; style=&#34;zoom:80%;&#34; /&gt; 
&lt;blockquote&gt;
&lt;p&gt;注: HTTP协议默认端口号为80，如果将Tomcat端口号改为80，则将来访问Tomcat时，将不用输入端口号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;33-入门程序解析&#34;&gt;
    &lt;a href=&#34;#33-%e5%85%a5%e9%97%a8%e7%a8%8b%e5%ba%8f%e8%a7%a3%e6%9e%90&#34;&gt;#&lt;/a&gt;
    3.3 入门程序解析
&lt;/h3&gt;&lt;p&gt;关于web开发的基础知识，我们可以告一段落了。下面呢，我们在基于今天的核心技术点SpringBoot快速入门案例进行分析。&lt;/p&gt;
&lt;h4 id=&#34;331-spring官方骨架&#34;&gt;
    &lt;a href=&#34;#331-spring%e5%ae%98%e6%96%b9%e9%aa%a8%e6%9e%b6&#34;&gt;#&lt;/a&gt;
    3.3.1 Spring官方骨架
&lt;/h4&gt;&lt;p&gt;之前我们创建的SpringBoot入门案例，是基于Spring官方提供的骨架实现的。&lt;/p&gt;
&lt;p&gt;Spring官方骨架，可以理解为Spring官方为程序员提供一个搭建项目的模板。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202195646621.png&#34;
	width=&#34;1002&#34;
	height=&#34;781&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202195646621_hub8081df0eb05052e7d7a2f57368d3acd_58856_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202195646621_hub8081df0eb05052e7d7a2f57368d3acd_58856_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202195646621&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;307px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们可以通过访问：https://start.spring.io/ ，进入到官方骨架页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201623424.png&#34;
	width=&#34;1712&#34;
	height=&#34;962&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201623424_hu5741d0df2b3a88f201a8f0289e66cd5b_130354_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201623424_hu5741d0df2b3a88f201a8f0289e66cd5b_130354_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202201623424&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;427px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200356398.png&#34;
	width=&#34;1674&#34;
	height=&#34;957&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200356398_hudbc9a7fb93c069941f972135351c8997_198219_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200356398_hudbc9a7fb93c069941f972135351c8997_198219_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202200356398&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;174&#34;
		data-flex-basis=&#34;419px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200547676.png&#34;
	width=&#34;1713&#34;
	height=&#34;964&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200547676_hu36e9ae6b9bfdbbbe9bf4007c1f6bc159_134318_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200547676_hu36e9ae6b9bfdbbbe9bf4007c1f6bc159_134318_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202200547676&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200708988.png&#34;
	width=&#34;1759&#34;
	height=&#34;986&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200708988_huec83208df2c8e738be6836adf1bb4ec5_124261_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202200708988_huec83208df2c8e738be6836adf1bb4ec5_124261_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202200708988&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;428px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Spring官方生成的SpringBoot项目，怎么使用呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解压缩后，就会得到一个SpringBoot项目工程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201042109.png&#34;
	width=&#34;932&#34;
	height=&#34;148&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201042109_hu94b56d8f2249cc42ea9c4ad3e1da73d0_13374_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201042109_hu94b56d8f2249cc42ea9c4ad3e1da73d0_13374_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202201042109&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;629&#34;
		data-flex-basis=&#34;1511px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201221136.png&#34;
	width=&#34;866&#34;
	height=&#34;278&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201221136_hu5bf58f5fa7394fabb520a0000e1f55d0_21998_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201221136_hu5bf58f5fa7394fabb520a0000e1f55d0_21998_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202201221136&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;311&#34;
		data-flex-basis=&#34;747px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;打开pom.xml文件，我们可以看到springboot项目中引入了web依赖和test依赖&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201826364.png&#34;
	width=&#34;1195&#34;
	height=&#34;870&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201826364_hu697885795d4479356e560301b38d92f3_88686_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202201826364_hu697885795d4479356e560301b38d92f3_88686_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202201826364&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;329px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;结论：不论使用IDEA创建SpringBoot项目，还是直接在官方网站利用骨架生成SpringBoot项目，项目的结构和pom.xml文件中内容是相似的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;332-起步依赖&#34;&gt;
    &lt;a href=&#34;#332-%e8%b5%b7%e6%ad%a5%e4%be%9d%e8%b5%96&#34;&gt;#&lt;/a&gt;
    3.3.2 起步依赖
&lt;/h4&gt;&lt;p&gt;在我们之前讲解的SpringBoot快速入门案例中，同样也引用了：web依赖和test依赖&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202202305118.png&#34;
	width=&#34;1211&#34;
	height=&#34;341&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202202305118_hu54019eece7cce98998e75179b534eb79_173636_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202202305118_hu54019eece7cce98998e75179b534eb79_173636_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202202305118&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;355&#34;
		data-flex-basis=&#34;852px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;spring-boot-starter-web和spring-boot-starter-test，在SpringBoot中又称为：起步依赖&lt;/p&gt;
&lt;p&gt;而在SpringBoot的项目中，有很多的起步依赖，他们有一个共同的特征：就是以&lt;code&gt;spring-boot-starter-&lt;/code&gt;作为开头。在以后大家遇到spring-boot-starter-xxx这类的依赖，都为起步依赖。&lt;/p&gt;
&lt;p&gt;起步依赖有什么特殊之处呢，这里我们以入门案例中引入的起步依赖做为讲解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;spring-boot-starter-web：包含了web应用开发所需要的常见依赖&lt;/li&gt;
&lt;li&gt;spring-boot-starter-test：包含了单元测试所需要的常见依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;spring-boot-starter-web&lt;/strong&gt;内部把关于Web开发所有的依赖都已经导入并且指定了版本，只需引入 &lt;code&gt;spring-boot-starter-web&lt;/code&gt; 依赖就可以实现Web开发的需要的功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202204013113.png&#34;
	width=&#34;1140&#34;
	height=&#34;871&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202204013113_hu48815111e61cf8d0d4bad0fd185bdcb5_163613_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202204013113_hu48815111e61cf8d0d4bad0fd185bdcb5_163613_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202204013113&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;130&#34;
		data-flex-basis=&#34;314px&#34;
	
&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring的官方提供了很多现成的starter(起步依赖)，我们在开发相关应用时，只需要引入对应的starter即可。&lt;/p&gt;
&lt;p&gt;官方地址：https://docs.spring.io/spring-boot/docs/2.7.2/reference/htmlsingle/#using.build-systems.starters&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202204536647.png&#34;
	width=&#34;1687&#34;
	height=&#34;762&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202204536647_hu5c082bb9da3991cf51ada5fdbb15777e_135772_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202204536647_hu5c082bb9da3991cf51ada5fdbb15777e_135772_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202204536647&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;221&#34;
		data-flex-basis=&#34;531px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;每一个起步依赖，都用于开发一个特定的功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;举例：当我们开发中需要使用redis数据库时，只需要在SpringBoot项目中，引入：spring-boot-starter-redis ，即可导入redis开发所需要的依赖。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;332-springboot父工程&#34;&gt;
    &lt;a href=&#34;#332-springboot%e7%88%b6%e5%b7%a5%e7%a8%8b&#34;&gt;#&lt;/a&gt;
    3.3.2 SpringBoot父工程
&lt;/h4&gt;&lt;p&gt;在我们之前开发的SpringBoot入门案例中，我们通过maven引入的依赖，是没有指定具体的依赖版本号的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202205103486.png&#34;
	width=&#34;1138&#34;
	height=&#34;741&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202205103486_hu0be0ea465558650dbe8c8894289402e8_116067_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202205103486_hu0be0ea465558650dbe8c8894289402e8_116067_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202205103486&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;368px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;为什么没有指定&lt;version&gt;版本号，可以正常使用呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为每一个SpringBoot工程，都有一个父工程。依赖的版本号，在父工程中统一管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202205318778.png&#34;
	width=&#34;1143&#34;
	height=&#34;805&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202205318778_hu8bace4ad7422e3a7bf79ec096aa2ad3f_161785_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20221202205318778_hu8bace4ad7422e3a7bf79ec096aa2ad3f_161785_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221202205318778&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;340px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;333-内嵌tomcat&#34;&gt;
    &lt;a href=&#34;#333-%e5%86%85%e5%b5%8ctomcat&#34;&gt;#&lt;/a&gt;
    3.3.3 内嵌Tomcat
&lt;/h4&gt;&lt;p&gt;问题：为什么我们之前书写的SpringBoot入门程序中，并没有把程序部署到Tomcat的webapps目录下，也可以运行呢？&lt;/p&gt;
&lt;p&gt;原因呢，是因为在我们的SpringBoot中，引入了web运行环境(也就是引入spring-boot-starter-web起步依赖)，其内部已经集成了内置的Tomcat服务器。&lt;/p&gt;
&lt;p&gt;我们可以通过IDEA开发工具右侧的maven面板中，就可以看到当前工程引入的依赖。其中已经将Tomcat的相关依赖传递下来了，也就是说在SpringBoot中可以直接使用Tomcat服务器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825194553137.png&#34;
	width=&#34;803&#34;
	height=&#34;447&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825194553137_hu5fb8737eaf7851c307f697359e054789_165662_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825194553137_hu5fb8737eaf7851c307f697359e054789_165662_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;179&#34;
		data-flex-basis=&#34;431px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当我们运行SpringBoot的引导类时(运行main方法)，就会看到命令行输出的日志，其中占用8080端口的就是Tomcat。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825195359993.png&#34;
	width=&#34;1354&#34;
	height=&#34;427&#34;
	srcset=&#34;http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825195359993_huc0108c869b6b550f8913ea4278748a73_226454_480x0_resize_box_3.png 480w, http://localhost:1313/p/%E5%88%9D%E8%AF%86springboot/assets/image-20220825195359993_huc0108c869b6b550f8913ea4278748a73_226454_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220825195359993&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;317&#34;
		data-flex-basis=&#34;761px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Maven基础</title>
        <link>http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Mon, 29 Apr 2024 11:37:47 +0800</pubDate>
        
        <guid>http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/</guid>
        <description>&lt;h1 id=&#34;maven&#34;&gt;
    &lt;a href=&#34;#maven&#34;&gt;#&lt;/a&gt;
    Maven
&lt;/h1&gt;&lt;h3 id=&#34;11-课程安排&#34;&gt;
    &lt;a href=&#34;#11-%e8%af%be%e7%a8%8b%e5%ae%89%e6%8e%92&#34;&gt;#&lt;/a&gt;
    1.1 课程安排
&lt;/h3&gt;&lt;p&gt;学习完前端Web开发技术后，我们即将开始学习后端Web开发技术。做为一名Java开发工程师，&lt;strong&gt;后端Web开发技术是我们学习的重点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130095316032.png&#34;
	width=&#34;1264&#34;
	height=&#34;591&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130095316032_huc95709851eb86c0f8c6154ac6800cbeb_67803_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130095316032_huc95709851eb86c0f8c6154ac6800cbeb_67803_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130095316032&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;213&#34;
		data-flex-basis=&#34;513px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;后端Web开发技术的学习，我们会先学习Java项目的构建工具：Maven&lt;/p&gt;
&lt;h3 id=&#34;12-初识maven&#34;&gt;
    &lt;a href=&#34;#12-%e5%88%9d%e8%af%86maven&#34;&gt;#&lt;/a&gt;
    1.2 初识Maven
&lt;/h3&gt;&lt;h4 id=&#34;121-什么是maven&#34;&gt;
    &lt;a href=&#34;#121-%e4%bb%80%e4%b9%88%e6%98%afmaven&#34;&gt;#&lt;/a&gt;
    1.2.1 什么是Maven
&lt;/h4&gt;&lt;p&gt;Maven是Apache旗下的一个开源项目，是一款用于管理和构建java项目的工具。&lt;/p&gt;
&lt;p&gt;官网：https://maven.apache.org/&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apache 软件基金会，成立于1999年7月，是目前世界上最大的最受欢迎的开源软件基金会，也是一个专门为支持开源项目而生的非盈利性组织。&lt;/p&gt;
&lt;p&gt;开源项目：https://www.apache.org/index.html#projects-list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;122-maven的作用&#34;&gt;
    &lt;a href=&#34;#122-maven%e7%9a%84%e4%bd%9c%e7%94%a8&#34;&gt;#&lt;/a&gt;
    1.2.2 Maven的作用
&lt;/h4&gt;&lt;p&gt;使用Maven能够做什么呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;依赖管理&lt;/li&gt;
&lt;li&gt;统一项目结构&lt;/li&gt;
&lt;li&gt;项目构建&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;依赖管理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方便快捷的管理项目依赖的资源(jar包)，避免版本冲突问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130104014162.png&#34;
	width=&#34;1159&#34;
	height=&#34;547&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130104014162_huf343291c80c45081a493d42d7c5e1365_510324_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130104014162_huf343291c80c45081a493d42d7c5e1365_510324_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130104014162&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;508px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当使用maven进行项目依赖(jar包)管理，则很方便的可以解决这个问题。 我们只需要在maven项目的pom.xml文件中，添加一段如下图所示的配置即可实现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616001159531.png&#34;
	width=&#34;625&#34;
	height=&#34;578&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616001159531_hubf652dff095ec3e586d3d60a9140a71b_51972_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616001159531_hubf652dff095ec3e586d3d60a9140a71b_51972_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616001159531&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;108&#34;
		data-flex-basis=&#34;259px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;**统一项目结构 : **&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供标准、统一的项目结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在项目开发中，当你使用不同的开发工具 (如：Eclipse、Idea)，创建项目工程时：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130212841973.png&#34;
	width=&#34;1240&#34;
	height=&#34;287&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130212841973_hu2da154d3ee18c4b2cfb8d8524478e103_33002_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130212841973_hu2da154d3ee18c4b2cfb8d8524478e103_33002_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130212841973&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;432&#34;
		data-flex-basis=&#34;1036px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;若我们创建的是一个maven工程，是可以帮我们自动生成统一、标准的项目目录结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130220539444.png&#34;
	width=&#34;1100&#34;
	height=&#34;265&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130220539444_hu5fb1c4049838212439a43cb9c45c9400_21758_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130220539444_hu5fb1c4049838212439a43cb9c45c9400_21758_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130220539444&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;415&#34;
		data-flex-basis=&#34;996px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;具体的统一结构如下：&lt;/p&gt;
&lt;img src=&#34;assets/image-20221130140132209.png&#34; alt=&#34;image-20221130140132209&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;blockquote&gt;
&lt;p&gt;目录说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;src/main/java: java源代码目录&lt;/li&gt;
&lt;li&gt;src/main/resources:  配置文件信息&lt;/li&gt;
&lt;li&gt;src/test/java: 测试代码&lt;/li&gt;
&lt;li&gt;src/test/resources: 测试配置文件信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;项目构建 :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maven提供了标准的、跨平台(Linux、Windows、MacOS) 的自动化项目构建方式&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;assets/image-20221130140247524.png&#34; alt=&#34;image-20221130140247524&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;如上图所示我们开发了一套系统，代码需要进行编译、测试、打包、发布，这些操作如果需要反复进行就显得特别麻烦，而Maven提供了一套简单的命令来完成项目构建。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130222907628.png&#34;
	width=&#34;1348&#34;
	height=&#34;813&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130222907628_hud1950dae86457617d6b14f48a392f586_98684_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130222907628_hud1950dae86457617d6b14f48a392f586_98684_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130222907628&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;397px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;综上所述，可以得到一个结论：&lt;strong&gt;Maven是一款管理和构建java项目的工具&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;02-maven概述&#34;&gt;
    &lt;a href=&#34;#02-maven%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;
    02. Maven概述
&lt;/h2&gt;&lt;h3 id=&#34;21-maven介绍&#34;&gt;
    &lt;a href=&#34;#21-maven%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;
    2.1 Maven介绍
&lt;/h3&gt;&lt;p&gt;Apache Maven是一个项目管理和构建工具，它基于项目对象模型(Project Object Model , 简称: POM)的概念，通过一小段描述信息来管理项目的构建、报告和文档。&lt;/p&gt;
&lt;p&gt;官网：https://maven.apache.org/&lt;/p&gt;
&lt;p&gt;Maven的作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方便的依赖管理&lt;/li&gt;
&lt;li&gt;统一的项目结构&lt;/li&gt;
&lt;li&gt;标准的项目构建流程&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;22-maven模型&#34;&gt;
    &lt;a href=&#34;#22-maven%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;
    2.2 Maven模型
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;项目对象模型 (Project Object Model)&lt;/li&gt;
&lt;li&gt;依赖管理模型(Dependency)&lt;/li&gt;
&lt;li&gt;构建生命周期/阶段(Build lifecycle &amp;amp; phases)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1). 构建生命周期/阶段(Build lifecycle &amp;amp; phases)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142100703.png&#34;
	width=&#34;1239&#34;
	height=&#34;518&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142100703_hu6ff71f74be516720ed1e585945941f70_60450_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142100703_hu6ff71f74be516720ed1e585945941f70_60450_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130142100703&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;239&#34;
		data-flex-basis=&#34;574px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;以上图中紫色框起来的部分，就是用来完成标准化构建流程 。当我们需要编译，Maven提供了一个编译插件供我们使用；当我们需要打包，Maven就提供了一个打包插件供我们使用等。&lt;/p&gt;
&lt;p&gt;2). 项目对象模型 (Project Object Model)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142643255.png&#34;
	width=&#34;1237&#34;
	height=&#34;517&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142643255_hu09706a2d23246c0a3b4e495473c29a4b_60532_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142643255_hu09706a2d23246c0a3b4e495473c29a4b_60532_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130142643255&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;239&#34;
		data-flex-basis=&#34;574px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;以上图中紫色框起来的部分属于项目对象模型，就是将我们自己的项目抽象成一个对象模型，有自己专属的坐标，如下图所示是一个Maven项目：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616094113852.png&#34;
	width=&#34;1301&#34;
	height=&#34;349&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616094113852_hu1044a4ec42e236c4647318277da7203a_57402_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616094113852_hu1044a4ec42e236c4647318277da7203a_57402_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616094113852&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;372&#34;
		data-flex-basis=&#34;894px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;坐标，就是资源(jar包)的唯一标识，通过坐标可以定位到所需资源(jar包)位置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130230134757.png&#34;
	width=&#34;1174&#34;
	height=&#34;494&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130230134757_hu89fa40bf67851cac97205dd96403a355_90448_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130230134757_hu89fa40bf67851cac97205dd96403a355_90448_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130230134757&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;237&#34;
		data-flex-basis=&#34;570px&#34;
	
&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3). 依赖管理模型(Dependency)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130143139644.png&#34;
	width=&#34;1239&#34;
	height=&#34;518&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130143139644_hu7b7ff5ae5f487a5688a4473a330e7f5b_60643_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130143139644_hu7b7ff5ae5f487a5688a4473a330e7f5b_60643_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130143139644&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;239&#34;
		data-flex-basis=&#34;574px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;以上图中紫色框起来的部分属于依赖管理模型，是使用坐标来描述当前项目依赖哪些第三方jar包。groupId表示组织名（域名+公司/组织+项目/模块名）、artifactId表示项目/模块名&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130174805973.png&#34;
	width=&#34;1190&#34;
	height=&#34;609&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130174805973_hue765ae47adf7473d58e14f5c0b442f36_202382_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130174805973_hue765ae47adf7473d58e14f5c0b442f36_202382_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130174805973&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;468px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;之前我们项目中需要jar包时，直接就把jar包复制到项目下的lib目录，而现在书写在pom.xml文件中的坐标又是怎么能找到所要的jar包文件的呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案：Maven仓库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;23-maven仓库&#34;&gt;
    &lt;a href=&#34;#23-maven%e4%bb%93%e5%ba%93&#34;&gt;#&lt;/a&gt;
    2.3 Maven仓库
&lt;/h3&gt;&lt;p&gt;仓库：用于存储资源，管理各种jar包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仓库的本质就是一个目录(文件夹)，这个目录被用来存储开发中所有依赖(就是jar包)和插件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maven仓库分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地仓库：自己计算机上的一个目录(用来存储jar包)&lt;/li&gt;
&lt;li&gt;中央仓库：由Maven团队维护的全球唯一的。仓库地址：https://repo1.maven.org/maven2/&lt;/li&gt;
&lt;li&gt;远程仓库(私服)：一般由公司团队搭建的私有仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616095633552.png&#34;
	width=&#34;1213&#34;
	height=&#34;400&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616095633552_hu4a777b237e689738810257d213837f65_90299_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616095633552_hu4a777b237e689738810257d213837f65_90299_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616095633552&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;303&#34;
		data-flex-basis=&#34;727px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;当项目中使用坐标引入对应依赖jar包后，首先会查找本地仓库中是否有对应的jar包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果有，则在项目直接引用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果没有，则去中央仓库中下载对应的jar包到本地仓库&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果还可以搭建远程仓库(私服)，将来jar包的查找顺序则变为： 本地仓库 &amp;ndash;&amp;gt; 远程仓库&amp;ndash;&amp;gt; 中央仓库&lt;/p&gt;
&lt;h3 id=&#34;24-maven安装&#34;&gt;
    &lt;a href=&#34;#24-maven%e5%ae%89%e8%a3%85&#34;&gt;#&lt;/a&gt;
    2.4 Maven安装
&lt;/h3&gt;&lt;p&gt;认识了Maven后，我们就要开始使用Maven了，那么首先我们要进行Maven的下载与安装。&lt;/p&gt;
&lt;h4 id=&#34;241-下载&#34;&gt;
    &lt;a href=&#34;#241-%e4%b8%8b%e8%bd%bd&#34;&gt;#&lt;/a&gt;
    2.4.1 下载
&lt;/h4&gt;&lt;p&gt;下载地址：https://maven.apache.org/download.cgi&lt;/p&gt;
&lt;p&gt;在提供的资料中，已经提供了下载好的安装包。如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616100211209.png&#34;
	width=&#34;377&#34;
	height=&#34;43&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616100211209_hu04543f8e54cfc4dc9abfbb4d309eba11_4469_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616100211209_hu04543f8e54cfc4dc9abfbb4d309eba11_4469_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616100211209&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;876&#34;
		data-flex-basis=&#34;2104px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;242-安装步骤&#34;&gt;
    &lt;a href=&#34;#242-%e5%ae%89%e8%a3%85%e6%ad%a5%e9%aa%a4&#34;&gt;#&lt;/a&gt;
    2.4.2 安装步骤
&lt;/h4&gt;&lt;p&gt;Maven安装配置步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解压安装&lt;/li&gt;
&lt;li&gt;配置仓库&lt;/li&gt;
&lt;li&gt;配置Maven环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;1、解压 apache-maven-3.6.1-bin.zip（解压即安装）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议解压到没有中文、特殊字符的路径下。如课程中解压到 &lt;code&gt;E:\develop&lt;/code&gt; 下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/1-1669821012006.gif&#34;
	width=&#34;740&#34;
	height=&#34;468&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/1-1669821012006_hu47774000b3a6f96a971d3ccc1d847abd_166098_480x0_resize_box_1.gif 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/1-1669821012006_hu47774000b3a6f96a971d3ccc1d847abd_166098_1024x0_resize_box_1.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;379px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;解压缩后的目录结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616100529868-1669794069698.png&#34;
	width=&#34;522&#34;
	height=&#34;283&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616100529868-1669794069698_hu2e5660e866cf2b77aa26f08a756bd30f_12791_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616100529868-1669794069698_hu2e5660e866cf2b77aa26f08a756bd30f_12791_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616100529868&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;442px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bin目录 ： 存放的是可执行命令。（mvn 命令重点关注）&lt;/li&gt;
&lt;li&gt;conf目录 ：存放Maven的配置文件。（settings.xml配置文件后期需要修改）&lt;/li&gt;
&lt;li&gt;lib目录 ：存放Maven依赖的jar包。（Maven也是使用java开发的，所以它也依赖其他的jar包）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2、配置本地仓库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.1、在自己计算机上新一个目录（本地仓库，用来存储jar包）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130231857537.png&#34;
	width=&#34;379&#34;
	height=&#34;295&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130231857537_hu5024502c757aff328e1ce84272c0de7b_22962_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130231857537_hu5024502c757aff328e1ce84272c0de7b_22962_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130231857537&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;308px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2.2、进入到conf目录下修改settings.xml配置文件&lt;/p&gt;
&lt;p&gt;1). 使用超级记事本软件，打开settings.xml文件，定位到53行&lt;/p&gt;
&lt;p&gt;2). 复制&lt;localRepository&gt;标签，粘贴到注释的外面（55行）&lt;/p&gt;
&lt;p&gt;3). 复制之前新建的用来存储jar包的路径，替换掉&lt;localRepository&gt;标签体内容&lt;/p&gt;
&lt;img src=&#34;assets/2.gif&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;3、配置阿里云私服&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于中央仓库在国外，所以下载jar包速度可能比较慢，而阿里公司提供了一个远程仓库，里面基本也都有开源项目的jar包。&lt;/p&gt;
&lt;p&gt;进入到conf目录下修改settings.xml配置文件：&lt;/p&gt;
&lt;p&gt;1). 使用超级记事本软件，打开settings.xml文件，定位到160行左右&lt;/p&gt;
&lt;p&gt;2). 在&lt;mirrors&gt;标签下为其添加子标签&lt;mirror&gt;，内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;alimaven&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;aliyun maven&lt;span class=&#34;nt&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;central&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/3.gif&#34;
	width=&#34;1423&#34;
	height=&#34;702&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/3_hubbd7a069d9b2c0c05def2ac1136bd9b7_514607_480x0_resize_box_1.gif 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/3_hubbd7a069d9b2c0c05def2ac1136bd9b7_514607_1024x0_resize_box_1.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;486px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;注意配置的位置，在&lt;mirrors&gt; &amp;hellip; &lt;/mirrors&gt; 中间添加配置。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130161346565.png&#34;
	width=&#34;1106&#34;
	height=&#34;642&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130161346565_hudfd939aec730aeeb4e5218e4e000ea0a_51568_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130161346565_hudfd939aec730aeeb4e5218e4e000ea0a_51568_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130161346565&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;172&#34;
		data-flex-basis=&#34;413px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;==注:  只可配置一个&lt;mirror&gt;(另一个要注释!) ，不然两个可能发生冲突，导致jar包无法下载!!!!!!!==&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、配置maven中的JDK版本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于maven项目中配置的JDK如果与安装的JDK版本不一致会报错（java:不支持发行版本 5），可以通过在配置文件C:\develop\apache-maven-3.6.1\conf\settings.xml中的&lt;profiles&gt; 标签中添加子标签&lt;profile&gt;，这样就不用看下面的在idea中修改配置了，内容如下（JDK17）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;jdk-17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;nt&#34;&gt;&amp;lt;activation&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nt&#34;&gt;&amp;lt;activeByDefault&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/activeByDefault&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nt&#34;&gt;&amp;lt;jdk&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/jdk&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/activation&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.source&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.source&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.target&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.target&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.compilerVersion&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.compilerVersion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;5、配置环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maven环境变量的配置类似于JDK环境变量配置一样&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1). 在系统变量处新建一个变量MAVEN_HOME&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAVEN_HOME环境变量的值，设置为maven的解压安装目录&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;assets/image-20220616102344350.png&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;2). 在Path中进行配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PATH环境变量的值，设置为：%MAVEN_HOME%\bin&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;assets/image-20220616102435856.png&#34; style=&#34;zoom:80%;&#34; /&gt; 
&lt;p&gt;3). 打开DOS命令提示符进行验证，出现如图所示表示安装成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mvn -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616102554143.png&#34;
	width=&#34;1225&#34;
	height=&#34;397&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616102554143_hu158bad9f303e3a652badf77de3d66cf4_38127_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616102554143_hu158bad9f303e3a652badf77de3d66cf4_38127_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616102554143&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;308&#34;
		data-flex-basis=&#34;740px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;03-idea集成maven&#34;&gt;
    &lt;a href=&#34;#03-idea%e9%9b%86%e6%88%90maven&#34;&gt;#&lt;/a&gt;
    03. IDEA集成Maven
&lt;/h2&gt;&lt;p&gt;我们要想在IDEA中使用Maven进行项目构建，就需要在IDEA中集成Maven&lt;/p&gt;
&lt;h3 id=&#34;31-配置maven环境&#34;&gt;
    &lt;a href=&#34;#31-%e9%85%8d%e7%bd%aemaven%e7%8e%af%e5%a2%83&#34;&gt;#&lt;/a&gt;
    3.1 配置Maven环境
&lt;/h3&gt;&lt;h4 id=&#34;311-当前工程设置&#34;&gt;
    &lt;a href=&#34;#311-%e5%bd%93%e5%89%8d%e5%b7%a5%e7%a8%8b%e8%ae%be%e7%bd%ae&#34;&gt;#&lt;/a&gt;
    3.1.1 当前工程设置
&lt;/h4&gt;&lt;p&gt;1、选择 IDEA中 File  =&amp;gt;  Settings  =&amp;gt;  Build,Execution,Deployment  =&amp;gt;  Build Tools  =&amp;gt;  Maven&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616103219646.png&#34;
	width=&#34;308&#34;
	height=&#34;429&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616103219646_hucedfc35663f7d84b4d4dd81962e5d620_70989_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616103219646_hucedfc35663f7d84b4d4dd81962e5d620_70989_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616103219646&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;71&#34;
		data-flex-basis=&#34;172px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130234731629.png&#34;
	width=&#34;1227&#34;
	height=&#34;880&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130234731629_hu123b992f882b3f1f9ebecb667352e7c1_79753_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130234731629_hu123b992f882b3f1f9ebecb667352e7c1_79753_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130234731629&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2、设置IDEA使用本地安装的Maven，并修改配置文件及本地仓库路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616103302386.png&#34;
	width=&#34;1131&#34;
	height=&#34;776&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616103302386_hu4592fa139f84042f7baa5c651a764539_75360_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616103302386_hu4592fa139f84042f7baa5c651a764539_75360_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maven home path ：指定当前Maven的安装目录&lt;/p&gt;
&lt;p&gt;User settings file ：指定当前Maven的settings.xml配置文件的存放路径&lt;/p&gt;
&lt;p&gt;Local repository ：指定Maven的本地仓库的路径 (如果指定了settings.xml, 这个目录会自动读取出来, 可以不用手动指定)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3、配置工程的编译版本为11&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maven默认使用的编译版本为5（版本过低）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201093737128.png&#34;
	width=&#34;1227&#34;
	height=&#34;880&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201093737128_hu466aae7ee1dd5229f1c6b8ef3c600d1f_75390_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201093737128_hu466aae7ee1dd5229f1c6b8ef3c600d1f_75390_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201093737128&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;上述配置的maven环境，只是针对于当前工程的，如果我们再创建一个project，又恢复成默认的配置了。 要解决这个问题， 我们就需要配置全局的maven环境。&lt;/p&gt;
&lt;h4 id=&#34;312-全局设置&#34;&gt;
    &lt;a href=&#34;#312-%e5%85%a8%e5%b1%80%e8%ae%be%e7%bd%ae&#34;&gt;#&lt;/a&gt;
    3.1.2 全局设置
&lt;/h4&gt;&lt;p&gt;1、进入到IDEA欢迎页面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择 IDEA中 File  =&amp;gt;  close project&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;assets/4.gif&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;img src=&#34;assets/image-20220616104338612.png&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;2、打开 All settings , 选择 Build,Execution,Deployment  =&amp;gt;  Build Tools  =&amp;gt;  Maven&lt;/p&gt;
&lt;img src=&#34;assets/image-20220616104517726.png&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;3、配置工程的编译版本为11&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201093737128.png&#34; alt=&#34;image-20221201093737128&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;这里所设置的maven的环境信息，并未指定任何一个project，此时设置的信息就属于全局配置信息。 以后，我们再创建project，默认就是使用我们全局配置的信息。&lt;/p&gt;
&lt;h3 id=&#34;32-maven项目&#34;&gt;
    &lt;a href=&#34;#32-maven%e9%a1%b9%e7%9b%ae&#34;&gt;#&lt;/a&gt;
    3.2 Maven项目
&lt;/h3&gt;&lt;h4 id=&#34;321-创建maven项目&#34;&gt;
    &lt;a href=&#34;#321-%e5%88%9b%e5%bb%bamaven%e9%a1%b9%e7%9b%ae&#34;&gt;#&lt;/a&gt;
    3.2.1 创建Maven项目
&lt;/h4&gt;&lt;p&gt;1、创建一个空项目&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201095621738.png&#34; alt=&#34;image-20221201095621738&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;img src=&#34;assets/image-20221201095600057.png&#34; alt=&#34;image-20221201095600057&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;2、创建模块，选择Maven，点击Next&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201095831320.png&#34; alt=&#34;image-20221201095831320&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;img src=&#34;assets/image-20221201100011799.png&#34; alt=&#34;image-20221201100011799&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;3、填写模块名称，坐标信息，点击finish，创建完成&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201100502234.png&#34; alt=&#34;image-20221201100502234&#34; style=&#34;zoom:80%;&#34; /&gt; 
&lt;p&gt;4、在Maven工程下，创建HelloWorld类&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201101603397.png&#34; alt=&#34;image-20221201101603397&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;img src=&#34;assets/image-20221201101643427.png&#34; alt=&#34;image-20221201101643427&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Maven项目的目录结构:&lt;/p&gt;
&lt;p&gt;maven-project01
|&amp;mdash;  src  (源代码目录和测试代码目录)
|&amp;mdash;  main (源代码目录)
|&amp;mdash; java (源代码java文件目录)
|&amp;mdash; resources (源代码配置文件目录)
|&amp;mdash;  test (测试代码目录)
|&amp;mdash; java (测试代码java目录)
|&amp;mdash; resources (测试代码配置文件目录)
|&amp;mdash; target (编译、打包生成文件存放目录)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;5、编写 HelloWorld，并运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorld&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello Maven ...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;322-pom配置详解&#34;&gt;
    &lt;a href=&#34;#322-pom%e9%85%8d%e7%bd%ae%e8%af%a6%e8%a7%a3&#34;&gt;#&lt;/a&gt;
    3.2.2 POM配置详解
&lt;/h4&gt;&lt;p&gt;POM (Project Object Model) ：指的是项目对象模型，用来描述当前的maven项目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用pom.xml文件来实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pom.xml文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- POM模型版本 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 当前项目坐标 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.itheima&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven_project1&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 打包方式 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span class=&#34;nt&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;pom文件详解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;project&gt; ：pom文件的根标签，表示当前maven项目&lt;/li&gt;
&lt;li&gt;&lt;modelVersion&gt; ：声明项目描述遵循哪一个POM模型版本
&lt;ul&gt;
&lt;li&gt;虽然模型本身的版本很少改变，但它仍然是必不可少的。目前POM模型版本是4.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;坐标 ：&lt;groupId&gt;、&lt;artifactId&gt;、&lt;version&gt;
&lt;ul&gt;
&lt;li&gt;定位项目在本地仓库中的位置，由以上三个标签组成一个坐标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;packaging&gt; ：maven项目的打包方式，通常设置为jar或war（默认值：jar）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;323-maven坐标详解&#34;&gt;
    &lt;a href=&#34;#323-maven%e5%9d%90%e6%a0%87%e8%af%a6%e8%a7%a3&#34;&gt;#&lt;/a&gt;
    3.2.3 Maven坐标详解
&lt;/h4&gt;&lt;p&gt;什么是坐标？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maven中的坐标是==资源的唯一标识== , 通过该坐标可以唯一定位资源位置&lt;/li&gt;
&lt;li&gt;使用坐标来定义项目或引入项目中需要的依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maven坐标主要组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;groupId：定义当前Maven项目隶属组织名称（通常是域名反写，例如：com.itheima）&lt;/li&gt;
&lt;li&gt;artifactId：定义当前Maven项目名称（通常是模块名称，例如 order-service、goods-service）&lt;/li&gt;
&lt;li&gt;version：定义当前项目版本号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下图就是使用坐标表示一个项目：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616111031057.png&#34;
	width=&#34;397&#34;
	height=&#34;160&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616111031057_hu16998692498d0a399e7f8caac1ee9304_8764_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616111031057_hu16998692498d0a399e7f8caac1ee9304_8764_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616111031057&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面所说的资源可以是插件、依赖、当前项目。&lt;/li&gt;
&lt;li&gt;我们的项目如果被其他的项目依赖时，也是需要坐标来引入的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;33-导入maven项目&#34;&gt;
    &lt;a href=&#34;#33-%e5%af%bc%e5%85%a5maven%e9%a1%b9%e7%9b%ae&#34;&gt;#&lt;/a&gt;
    3.3 导入Maven项目
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方式1：使用Maven面板，快速导入项目&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开IDEA，选择右侧Maven面板，点击 + 号，选中对应项目的pom.xml文件，双击即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201104320521.png&#34;
	width=&#34;1919&#34;
	height=&#34;554&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201104320521_huaf6228101fbea4e9ac01656a79b4336e_119563_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201104320521_huaf6228101fbea4e9ac01656a79b4336e_119563_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201104320521&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;346&#34;
		data-flex-basis=&#34;831px&#34;
	
&gt;&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201104906754.png&#34; alt=&#34;image-20221201104906754&#34; style=&#34;zoom:80%;&#34; /&gt; 
&lt;blockquote&gt;
&lt;p&gt;说明：如果没有Maven面板，选择 View  =&amp;gt;  Appearance  =&amp;gt;  Tool Window Bars&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616111937679.png&#34;
	width=&#34;519&#34;
	height=&#34;436&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616111937679_hube62a56d0cdd1d0ddaa50372b58adf48_153825_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616111937679_hube62a56d0cdd1d0ddaa50372b58adf48_153825_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616111937679&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;119&#34;
		data-flex-basis=&#34;285px&#34;
	
&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方式2：使用idea导入模块项目&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;File  =&amp;gt;  Project Structure  =&amp;gt;  Modules  =&amp;gt;  +  =&amp;gt;  Import Module&lt;/p&gt;
&lt;img src=&#34;assets/image-20220823161727718.png&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;p&gt;找到要导入工程的pom.xml&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201105532909.png&#34;
	width=&#34;922&#34;
	height=&#34;573&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201105532909_hub67c9b47e1ed79de6f921bba9b2df678_50551_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201105532909_hub67c9b47e1ed79de6f921bba9b2df678_50551_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201105532909&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;386px&#34;
	
&gt;&lt;/p&gt;
&lt;img src=&#34;assets/image-20221201105845872.png&#34; alt=&#34;image-20221201105845872&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;h2 id=&#34;04-依赖管理&#34;&gt;
    &lt;a href=&#34;#04-%e4%be%9d%e8%b5%96%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;
    04. 依赖管理
&lt;/h2&gt;&lt;h3 id=&#34;41-依赖配置&#34;&gt;
    &lt;a href=&#34;#41-%e4%be%9d%e8%b5%96%e9%85%8d%e7%bd%ae&#34;&gt;#&lt;/a&gt;
    4.1 依赖配置
&lt;/h3&gt;&lt;p&gt;依赖：指当前项目运行所需要的jar包。一个项目中可以引入多个依赖：&lt;/p&gt;
&lt;p&gt;例如：在当前工程中，我们需要用到logback来记录日志，此时就可以在maven工程的pom.xml文件中，引入logback的依赖。具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在pom.xml中编写&lt;dependencies&gt;标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;dependencies&gt;标签中使用&lt;dependency&gt;引入坐标&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义坐标的 groupId、artifactId、version&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 第1个依赖 : logback --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;ch.qos.logback&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;logback-classic&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.2.11&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 第2个依赖 : junit --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;junit&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;junit&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.12&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;点击刷新按钮，引入最新加入的坐标
&lt;ul&gt;
&lt;li&gt;刷新依赖：保证每一次引入新的依赖，或者修改现有的依赖配置，都可以加入最新的坐标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130184402805.png&#34;
	width=&#34;581&#34;
	height=&#34;219&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130184402805_hub02baa398f8eae7dcceb9cbaf3cc7157_25274_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130184402805_hub02baa398f8eae7dcceb9cbaf3cc7157_25274_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130184402805&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;265&#34;
		data-flex-basis=&#34;636px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果引入的依赖，在本地仓库中不存在，将会连接远程仓库 / 中央仓库，然后下载依赖（这个过程会比较耗时，耐心等待）&lt;/li&gt;
&lt;li&gt;如果不知道依赖的坐标信息，可以到mvn的中央仓库（https://mvnrepository.com/）中搜索&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;添加依赖的几种方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;利用中央仓库搜索的依赖坐标&lt;/p&gt;
&lt;img src=&#34;assets/5.gif&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用IDEA工具搜索依赖&lt;/p&gt;
&lt;img src=&#34;assets/6.gif&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;熟练上手maven后，快速导入依赖&lt;/p&gt;
&lt;img src=&#34;assets/7.gif&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;42-依赖传递&#34;&gt;
    &lt;a href=&#34;#42-%e4%be%9d%e8%b5%96%e4%bc%a0%e9%80%92&#34;&gt;#&lt;/a&gt;
    4.2 依赖传递
&lt;/h3&gt;&lt;h4 id=&#34;421-依赖具有传递性&#34;&gt;
    &lt;a href=&#34;#421-%e4%be%9d%e8%b5%96%e5%85%b7%e6%9c%89%e4%bc%a0%e9%80%92%e6%80%a7&#34;&gt;#&lt;/a&gt;
    4.2.1 依赖具有传递性
&lt;/h4&gt;&lt;p&gt;早期我们没有使用maven时，向项目中添加依赖的jar包，需要把所有的jar包都复制到项目工程下。如下图所示，需要logback-classic时，由于logback-classic又依赖了logback-core和slf4j，所以必须把这3个jar包全部复制到项目工程下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201120514644.png&#34;
	width=&#34;1061&#34;
	height=&#34;172&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201120514644_huf3ebc82f3ba7d99136b2fba864b8f615_51352_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201120514644_huf3ebc82f3ba7d99136b2fba864b8f615_51352_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201120514644&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;616&#34;
		data-flex-basis=&#34;1480px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们现在使用了maven，当项目中需要使用logback-classic时，只需要在pom.xml配置文件中，添加logback-classic的依赖坐标即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201113659400.png&#34;
	width=&#34;1604&#34;
	height=&#34;507&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201113659400_huaa53a4e28600555623336a2aef957a14_102972_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201113659400_huaa53a4e28600555623336a2aef957a14_102972_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201113659400&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;316&#34;
		data-flex-basis=&#34;759px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在pom.xml文件中只添加了logback-classic依赖，但由于maven的依赖具有传递性，所以会自动把所依赖的其他jar包也一起导入。&lt;/p&gt;
&lt;p&gt;依赖传递可以分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;直接依赖：在当前项目中通过依赖配置建立的依赖关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;间接依赖：被依赖的资源如果依赖其他资源，当前项目间接依赖其他资源&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616115445812.png&#34;
	width=&#34;1199&#34;
	height=&#34;413&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616115445812_hud07a2898ef4b66c17571c544933c50dc_24563_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616115445812_hud07a2898ef4b66c17571c544933c50dc_24563_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616115445812&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;290&#34;
		data-flex-basis=&#34;696px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;比如以上图中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;projectA依赖了projectB。对于projectA 来说，projectB 就是直接依赖。&lt;/li&gt;
&lt;li&gt;而projectB依赖了projectC及其他jar包。 那么此时，在projectA中也会将projectC的依赖传递下来。对于projectA 来说，projectC就是间接依赖。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201115801806.png&#34;
	width=&#34;1328&#34;
	height=&#34;625&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201115801806_huc4ec93a63acf7005cd7200882a64e50f_125887_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201115801806_huc4ec93a63acf7005cd7200882a64e50f_125887_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201115801806&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;509px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;422-排除依赖&#34;&gt;
    &lt;a href=&#34;#422-%e6%8e%92%e9%99%a4%e4%be%9d%e8%b5%96&#34;&gt;#&lt;/a&gt;
    4.2.2 排除依赖
&lt;/h4&gt;&lt;p&gt;问题：之前我们讲了依赖具有传递性。那么A依赖B，B依赖C，如果A不想将C依赖进来，是否可以做到？&lt;/p&gt;
&lt;p&gt;答案：在maven项目中，我们可以通过排除依赖来实现。&lt;/p&gt;
&lt;p&gt;什么是排除依赖？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;排除依赖：指主动断开依赖的资源。（被排除的资源无需指定版本）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.itheima&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-projectB&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!--排除依赖, 主动断开依赖的资源--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;exclusions&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    	&lt;span class=&#34;nt&#34;&gt;&amp;lt;exclusion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;junit&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;junit&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/exclusion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/exclusions&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依赖排除示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maven-projectA依赖了maven-projectB，maven-projectB依赖了Junit。基于依赖的传递性，所以maven-projectA也依赖了Junit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201141929240.png&#34;
	width=&#34;1567&#34;
	height=&#34;851&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201141929240_hu85f1487a579d3d2952090c44010422bf_162745_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201141929240_hu85f1487a579d3d2952090c44010422bf_162745_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201141929240&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;441px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用排除依赖后&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201142501556.png&#34;
	width=&#34;1570&#34;
	height=&#34;839&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201142501556_hu3e4ac8b28dce74aaa5802b2c06fa3431_154111_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201142501556_hu3e4ac8b28dce74aaa5802b2c06fa3431_154111_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201142501556&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;449px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;43-依赖范围&#34;&gt;
    &lt;a href=&#34;#43-%e4%be%9d%e8%b5%96%e8%8c%83%e5%9b%b4&#34;&gt;#&lt;/a&gt;
    4.3 依赖范围
&lt;/h3&gt;&lt;p&gt;在项目中导入依赖的jar包后，默认情况下，可以在任何地方使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201135142706.png&#34;
	width=&#34;1585&#34;
	height=&#34;811&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201135142706_hua305a4a596f185109b8b8b932be4a1fa_208175_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201135142706_hua305a4a596f185109b8b8b932be4a1fa_208175_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201135142706&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;469px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果希望限制依赖的使用范围，可以通过&lt;scope&gt;标签设置其作用范围。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616123806894.png&#34;
	width=&#34;206&#34;
	height=&#34;209&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616123806894_hu6c54cacfe7146051d97cd662330d7487_18503_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616123806894_hu6c54cacfe7146051d97cd662330d7487_18503_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616123806894&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;98&#34;
		data-flex-basis=&#34;236px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;作用范围：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主程序范围有效（main文件夹范围内）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试程序范围有效（test文件夹范围内）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否参与打包运行（package指令范围内）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201140140947.png&#34;
	width=&#34;1583&#34;
	height=&#34;812&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201140140947_hua4ad2501d4585e85bb515aac70d06c45_210129_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201140140947_hua4ad2501d4585e85bb515aac70d06c45_210129_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201140140947&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;467px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，给junit依赖通过scope标签指定依赖的作用范围。 那么这个依赖就只能作用在测试环境，其他环境下不能使用。&lt;/p&gt;
&lt;p&gt;scope标签的取值范围：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;scope&lt;/strong&gt;值&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;主程序&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;测试程序&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;打包（运行）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;范例&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;compile（默认）&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;log4j&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;test&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;junit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;provided&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;servlet-api&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;runtime&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;jdbc驱动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;44-生命周期&#34;&gt;
    &lt;a href=&#34;#44-%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f&#34;&gt;#&lt;/a&gt;
    4.4 生命周期
&lt;/h3&gt;&lt;h4 id=&#34;441-介绍&#34;&gt;
    &lt;a href=&#34;#441-%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;
    4.4.1 介绍
&lt;/h4&gt;&lt;p&gt;Maven的生命周期就是为了对所有的构建过程进行抽象和统一。 描述了一次项目构建，经历哪些阶段。&lt;/p&gt;
&lt;p&gt;在Maven出现之前，项目构建的生命周期就已经存在，软件开发人员每天都在对项目进行清理，编译，测试及部署。虽然大家都在不停地做构建工作，但公司和公司间、项目和项目间，往往使用不同的方式做类似的工作。&lt;/p&gt;
&lt;p&gt;Maven从大量项目和构建工具中学习和反思，然后总结了一套高度完美的，易扩展的项目构建生命周期。这个生命周期包含了项目的清理，初始化，编译，测试，打包，集成测试，验证，部署和站点生成等几乎所有构建步骤。&lt;/p&gt;
&lt;p&gt;Maven对项目构建的生命周期划分为3套（相互独立）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616124015567.png&#34;
	width=&#34;1059&#34;
	height=&#34;161&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616124015567_hu318a5afd2cae3bfede2425692e19a167_82386_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616124015567_hu318a5afd2cae3bfede2425692e19a167_82386_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;657&#34;
		data-flex-basis=&#34;1578px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;clean：清理工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;default：核心工作。如：编译、测试、打包、安装、部署等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;site：生成报告、发布站点等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三套生命周期又包含哪些具体的阶段呢, 我们来看下面这幅图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616124348972.png&#34;
	width=&#34;999&#34;
	height=&#34;510&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616124348972_hu5f543a2b590822e0badffb0e7e07b0da_191913_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20220616124348972_hu5f543a2b590822e0badffb0e7e07b0da_191913_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20220616124348972&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;470px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们看到这三套生命周期，里面有很多很多的阶段，这么多生命周期阶段，其实我们常用的并不多，主要关注以下几个：&lt;/p&gt;
&lt;p&gt;• clean：移除上一次构建生成的文件&lt;/p&gt;
&lt;p&gt;• compile：编译项目源代码&lt;/p&gt;
&lt;p&gt;• test：使用合适的单元测试框架运行测试(junit)&lt;/p&gt;
&lt;p&gt;• package：将编译后的文件打包，如：jar、war等&lt;/p&gt;
&lt;p&gt;• install：安装项目到本地仓库&lt;/p&gt;
&lt;p&gt;Maven的生命周期是抽象的，这意味着生命周期本身不做任何实际工作。&lt;strong&gt;在Maven的设计中，实际任务（如源代码编译）都交由插件来完成。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142100703.png&#34;
	width=&#34;1239&#34;
	height=&#34;518&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142100703_hu6ff71f74be516720ed1e585945941f70_60450_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221130142100703_hu6ff71f74be516720ed1e585945941f70_60450_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221130142100703&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;239&#34;
		data-flex-basis=&#34;574px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;IDEA工具为了方便程序员使用maven生命周期，在右侧的maven工具栏中，已给出快速访问通道&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201151340340.png&#34;
	width=&#34;1892&#34;
	height=&#34;752&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201151340340_huab885716a4ed27fbea1d6e5b5c336c8f_214912_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201151340340_huab885716a4ed27fbea1d6e5b5c336c8f_214912_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201151340340&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;251&#34;
		data-flex-basis=&#34;603px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;生命周期的顺序是：clean &amp;ndash;&amp;gt; validate &amp;ndash;&amp;gt; compile &amp;ndash;&amp;gt; test &amp;ndash;&amp;gt; package &amp;ndash;&amp;gt; verify &amp;ndash;&amp;gt; install &amp;ndash;&amp;gt; site &amp;ndash;&amp;gt; deploy&lt;/p&gt;
&lt;p&gt;我们需要关注的就是：clean &amp;ndash;&amp;gt;  compile &amp;ndash;&amp;gt; test &amp;ndash;&amp;gt; package  &amp;ndash;&amp;gt; install&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;说明：在同一套生命周期中，我们在执行后面的生命周期时，前面的生命周期都会执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;思考：当运行package生命周期时，clean、compile生命周期会不会运行？&lt;/p&gt;
&lt;p&gt;​		clean不会运行，compile会运行。  因为compile与package属于同一套生命周期，而clean与package不属于同一套生命周期。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;442-执行&#34;&gt;
    &lt;a href=&#34;#442-%e6%89%a7%e8%a1%8c&#34;&gt;#&lt;/a&gt;
    4.4.2 执行
&lt;/h4&gt;&lt;p&gt;在日常开发中，当我们要执行指定的生命周期时，有两种执行方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在idea工具右侧的maven工具栏中，选择对应的生命周期，双击执行&lt;/li&gt;
&lt;li&gt;在DOS命令行中，通过maven命令执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;方式一：在idea中执行生命周期&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择对应的生命周期，双击执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201161957301.png&#34;
	width=&#34;1579&#34;
	height=&#34;522&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201161957301_hufe606a148c1c168c53c0aa2e9e8b9391_108147_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201161957301_hufe606a148c1c168c53c0aa2e9e8b9391_108147_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201161957301&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;302&#34;
		data-flex-basis=&#34;725px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;compile：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201163711835.png&#34;
	width=&#34;1801&#34;
	height=&#34;901&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201163711835_hub995a4a37c1d42a60aff0aac3a59b11b_222820_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201163711835_hub995a4a37c1d42a60aff0aac3a59b11b_222820_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201163711835&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;479px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;test：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201164627403.png&#34;
	width=&#34;1868&#34;
	height=&#34;905&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201164627403_huc4092e8e11a623400da3c8b1a6455692_186437_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201164627403_huc4092e8e11a623400da3c8b1a6455692_186437_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201164627403&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;495px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;package：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201165801341.png&#34;
	width=&#34;1838&#34;
	height=&#34;885&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201165801341_hu5d785d2c1d2f7b1320dbadd6f6db505e_259848_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201165801341_hu5d785d2c1d2f7b1320dbadd6f6db505e_259848_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201165801341&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;install：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201170830837.png&#34;
	width=&#34;1867&#34;
	height=&#34;901&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201170830837_huea306d7678a84a77df9593302d1b6293_318704_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201170830837_huea306d7678a84a77df9593302d1b6293_318704_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201170830837&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;497px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;clean：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201171529382.png&#34;
	width=&#34;1805&#34;
	height=&#34;879&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201171529382_hu171fa7caf5dd31b953c4af5327ef04d5_237553_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201171529382_hu171fa7caf5dd31b953c4af5327ef04d5_237553_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201171529382&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;205&#34;
		data-flex-basis=&#34;492px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方式二：在命令行中执行生命周期&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进入到DOS命令行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201172210253.png&#34;
	width=&#34;821&#34;
	height=&#34;497&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201172210253_huc914a853b51fc3ab1d3ffbc74be530c6_50016_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201172210253_huc914a853b51fc3ab1d3ffbc74be530c6_50016_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201172210253&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;396px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201172914648.png&#34;
	width=&#34;1292&#34;
	height=&#34;899&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201172914648_huaa57e29d90b5c6e91a13ec5b7a589f6b_115141_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221201172914648_huaa57e29d90b5c6e91a13ec5b7a589f6b_115141_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221201172914648&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;05-附录&#34;&gt;
    &lt;a href=&#34;#05-%e9%99%84%e5%bd%95&#34;&gt;#&lt;/a&gt;
    05. 附录
&lt;/h2&gt;&lt;h3 id=&#34;51-更新依赖索引&#34;&gt;
    &lt;a href=&#34;#51-%e6%9b%b4%e6%96%b0%e4%be%9d%e8%b5%96%e7%b4%a2%e5%bc%95&#34;&gt;#&lt;/a&gt;
    5.1 更新依赖索引
&lt;/h3&gt;&lt;p&gt;有时候给idea配置完maven仓库信息后，在idea中依然搜索不到仓库中的jar包。这是因为仓库中的jar包索引尚未更新到idea中。这个时候我们就需要更新idea中maven的索引了，具体做法如下：&lt;/p&gt;
&lt;p&gt;打开设置&amp;mdash;-搜索maven&amp;mdash;-Repositories&amp;mdash;-选中本地仓库&amp;mdash;&amp;ndash;点击Update&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/1537786634456-1582625518984.png&#34;
	width=&#34;1038&#34;
	height=&#34;560&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/1537786634456-1582625518984_hu16b2c7d9815524aaba0c46ab05b6b458_48361_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/1537786634456-1582625518984_hu16b2c7d9815524aaba0c46ab05b6b458_48361_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1537786634456&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;185&#34;
		data-flex-basis=&#34;444px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;52-清理maven仓库&#34;&gt;
    &lt;a href=&#34;#52-%e6%b8%85%e7%90%86maven%e4%bb%93%e5%ba%93&#34;&gt;#&lt;/a&gt;
    5.2 清理maven仓库
&lt;/h3&gt;&lt;p&gt;初始情况下，我们的本地仓库是没有任何jar包的，此时会从私服去下载（如果没有配置，就直接从中央仓库去下载），可能由于网络的原因，jar包下载不完全，这些不完整的jar包都是以lastUpdated结尾。此时，maven不会再重新帮你下载，需要你删除这些以lastUpdated结尾的文件，然后maven才会再次自动下载这些jar包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/lastUpdated-1582625518983.png&#34;
	width=&#34;824&#34;
	height=&#34;161&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/lastUpdated-1582625518983_hub89515b4393164a7b75a88c227fc59c0_19564_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/lastUpdated-1582625518983_hub89515b4393164a7b75a88c227fc59c0_19564_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;lastUpdate&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;511&#34;
		data-flex-basis=&#34;1228px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果本地仓库中有很多这样的以lastUpadted结尾的文件，可以定义一个批处理文件，在其中编写如下脚本来删除：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;set REPOSITORY_PATH=E:\develop\apache-maven-3.6.1\mvn_repo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rem 正在搜索...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;del /s /q %REPOSITORY_PATH%\*.lastUpdated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rem 搜索完毕
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pause
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;操作步骤如下：&lt;/p&gt;
&lt;p&gt;1). 定义批处理文件del_lastUpdated.bat  (直接创建一个文本文件，命名为del_lastUpdated，后缀名直接改为bat即可 )&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221214154949482.png&#34;
	width=&#34;895&#34;
	height=&#34;25&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221214154949482_hu02cbe3030317e8470e3de2c53bc35327_3137_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221214154949482_hu02cbe3030317e8470e3de2c53bc35327_3137_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221214154949482&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;3580&#34;
		data-flex-basis=&#34;8592px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2). 在上面的bat文件上&lt;strong&gt;右键&amp;mdash;》编辑&lt;/strong&gt; 。修改文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221214154559817.png&#34;
	width=&#34;1261&#34;
	height=&#34;187&#34;
	srcset=&#34;http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221214154559817_hu262012bb593692e05329df198451a6ae_21433_480x0_resize_box_3.png 480w, http://localhost:1313/p/maven%E5%9F%BA%E7%A1%80/assets/image-20221214154559817_hu262012bb593692e05329df198451a6ae_21433_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20221214154559817&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;674&#34;
		data-flex-basis=&#34;1618px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;修改完毕后，双击运行即可删除maven仓库中的残留文件。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Web开发概述</title>
        <link>http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/</link>
        <pubDate>Sat, 27 Apr 2024 11:46:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/</guid>
        <description>&lt;h1 id=&#34;web开发介绍&#34;&gt;
    &lt;a href=&#34;#web%e5%bc%80%e5%8f%91%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;
    Web开发介绍
&lt;/h1&gt;&lt;h1 id=&#34;1-什么是web开发&#34;&gt;
    &lt;a href=&#34;#1-%e4%bb%80%e4%b9%88%e6%98%afweb%e5%bc%80%e5%8f%91&#34;&gt;#&lt;/a&gt;
    1 什么是web开发
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Web&lt;/strong&gt;：全球广域网，也称为&lt;strong&gt;万维网&lt;/strong&gt;(www &lt;strong&gt;W&lt;/strong&gt;orld &lt;strong&gt;W&lt;/strong&gt;ide &lt;strong&gt;W&lt;/strong&gt;eb)，能够通过浏览器访问的&lt;strong&gt;网站&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;所以&lt;strong&gt;Web开发&lt;/strong&gt;说白了，就是&lt;strong&gt;开发网站&lt;/strong&gt;的，例如下图所示的网站：&lt;strong&gt;淘宝&lt;/strong&gt;，&lt;strong&gt;京东&lt;/strong&gt;等等&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667546541068.png&#34;
	width=&#34;1705&#34;
	height=&#34;663&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667546541068_hucabab32b51ba8a5b568aab6d304af11b_610704_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667546541068_hucabab32b51ba8a5b568aab6d304af11b_610704_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667546541068&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;257&#34;
		data-flex-basis=&#34;617px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;那么我们知道了web开发是开发网站的，那么我们需要学习哪些知识呢？以及这些知识在我们整个网站开发中占据什么位置呢？对于这些问题，我们就必须知道网站整体的工作流程。&lt;/p&gt;
&lt;h1 id=&#34;2-网站的工作流程&#34;&gt;
    &lt;a href=&#34;#2-%e7%bd%91%e7%ab%99%e7%9a%84%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b&#34;&gt;#&lt;/a&gt;
    2 网站的工作流程
&lt;/h1&gt;&lt;p&gt;接下来我们先来看看网站的工作流程，这样才能在我们的脑海中构建初步的知识架构体系。&lt;/p&gt;
&lt;p&gt;1.首先我们需要通过&lt;strong&gt;浏览器&lt;/strong&gt;访问发布到&lt;strong&gt;前端服务器&lt;/strong&gt;中的&lt;strong&gt;前端程序&lt;/strong&gt;，这时候前端程序会将前端代码返回给浏览器。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667546920773.png&#34;
	width=&#34;1118&#34;
	height=&#34;550&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667546920773_hu8e99b5fc5ed814a7e700e6dadfe4c384_33526_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667546920773_hu8e99b5fc5ed814a7e700e6dadfe4c384_33526_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667546920773&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;487px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2.浏览器得到前端代码，此时浏览器会将前端代码进行解析，然后展示到浏览器的窗口中，这时候我们就看到了&lt;strong&gt;网站&lt;/strong&gt;的&lt;strong&gt;页面&lt;/strong&gt;，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547421140.png&#34;
	width=&#34;1139&#34;
	height=&#34;563&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547421140_hu319cd9f093d0e6bb1370c1a84a2a197c_104062_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547421140_hu319cd9f093d0e6bb1370c1a84a2a197c_104062_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667547421140&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;485px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;3.但是此时这个页面是没有数据的，因为数据在我们的数据库中，所以我们浏览器需要根据&lt;strong&gt;前端代码中指定的后台服务器的地址&lt;/strong&gt; 向 我们的&lt;strong&gt;后台服务器&lt;/strong&gt;（内部有java程序）发起&lt;strong&gt;请求&lt;/strong&gt;，后台服务器再去从&lt;strong&gt;数据库&lt;/strong&gt;中获取数据，然后返回给浏览器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547561387.png&#34;
	width=&#34;1117&#34;
	height=&#34;545&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547561387_huae27720494b4867bdbfb9c606b760892_45567_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547561387_huae27720494b4867bdbfb9c606b760892_45567_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667547561387&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;204&#34;
		data-flex-basis=&#34;491px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;4.浏览器拿到后台返回的数据后，然后将数据展示在前端资源也就是&lt;strong&gt;网页&lt;/strong&gt;上，然后我们就看到了如下图所示的完整的内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547604517.png&#34;
	width=&#34;1127&#34;
	height=&#34;566&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547604517_hu5810af9500b799d3a8efbbd87097045d_289321_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667547604517_hu5810af9500b799d3a8efbbd87097045d_289321_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667547604517&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;477px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;整个流程如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.浏览器先向前端服务器请求&lt;strong&gt;前端资源&lt;/strong&gt;，也就是我们所说的&lt;strong&gt;网页&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.浏览器再向&lt;strong&gt;后台服务器&lt;/strong&gt;发起请求，获取&lt;strong&gt;数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3.浏览器将得到的后台&lt;strong&gt;数据&lt;/strong&gt;填充到&lt;strong&gt;网页&lt;/strong&gt;上，然后展示给用户去看&lt;/p&gt;
&lt;h1 id=&#34;3-网站的开发模式&#34;&gt;
    &lt;a href=&#34;#3-%e7%bd%91%e7%ab%99%e7%9a%84%e5%bc%80%e5%8f%91%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;
    3 网站的开发模式
&lt;/h1&gt;&lt;p&gt;接下来我们来聊聊网站的开发模式，主要有2种：前端台分离和混合开发&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前后台分离&lt;/strong&gt;：（**目前企业开发的主流，**市场占有率70%以上）这种开发模式的特点如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前端人员开发前端程序，前端程序单独部署到前端服务器上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后端人员开开发后端程序，后端程序单独部署到后端服务器上&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548530745.png&#34;
	width=&#34;1242&#34;
	height=&#34;597&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548530745_hu1453c0810b46a27398b765c54b52c57f_56949_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548530745_hu1453c0810b46a27398b765c54b52c57f_56949_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667548530745&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;208&#34;
		data-flex-basis=&#34;499px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;混合开发：&lt;/strong&gt;（早期的开发技术，目前慢慢退出市场），这种开发模式的特点是：前端人员开发的代码和后端人员开发的代码在同一个项目中，一起打包部署。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548590602.png&#34;
	width=&#34;1249&#34;
	height=&#34;604&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548590602_hu940ef93b651eb520e0b9986f36364408_55109_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548590602_hu940ef93b651eb520e0b9986f36364408_55109_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667548590602&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;496px&#34;
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-网站的开发技术&#34;&gt;
    &lt;a href=&#34;#4-%e7%bd%91%e7%ab%99%e7%9a%84%e5%bc%80%e5%8f%91%e6%8a%80%e6%9c%af&#34;&gt;#&lt;/a&gt;
    4 网站的开发技术
&lt;/h1&gt;&lt;p&gt;最后我们来看看web阶段需要学习哪些技术呢？如下图我们列举了课程中需要学习的知识点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548969631.png&#34;
	width=&#34;1234&#34;
	height=&#34;584&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548969631_hu62b4116daedbbd6415fb9a0012697805_74846_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667548969631_hu62b4116daedbbd6415fb9a0012697805_74846_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667548969631&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;507px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667829877388.png&#34;
	width=&#34;799&#34;
	height=&#34;385&#34;
	srcset=&#34;http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667829877388_hu8b875f3c9685f9369088a94daf971b86_70909_480x0_resize_box_3.png 480w, http://localhost:1313/p/web%E5%BC%80%E5%8F%91%E6%A6%82%E8%BF%B0/assets/1667829877388_hu8b875f3c9685f9369088a94daf971b86_70909_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1667829877388&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;以下是图表的方式整理了我们web阶段要学习的技术和其对应的作用&lt;/p&gt;
&lt;p&gt;前端web开发：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;技术&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HTML&lt;/td&gt;
&lt;td&gt;用于构建网站的基础结构的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;css&lt;/td&gt;
&lt;td&gt;用于美化页面的，作用和化妆或者整容作用一样&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JavaScript&lt;/td&gt;
&lt;td&gt;实现网页和用户的交互&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue&lt;/td&gt;
&lt;td&gt;主要用于将数据填充到html页面上的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Element&lt;/td&gt;
&lt;td&gt;主要提供了一些非常美观的组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx&lt;/td&gt;
&lt;td&gt;一款web服务器软件，可以用于部署我们的前端工程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;后端web开发：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;技术&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Maven&lt;/td&gt;
&lt;td&gt;一款java中用于管理项目的软件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mysql&lt;/td&gt;
&lt;td&gt;最常用的一款数据库软件之一&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SpringBoot&lt;/td&gt;
&lt;td&gt;spring家族的产品，当前最为主流的项目开发技术。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mybatis&lt;/td&gt;
&lt;td&gt;用于操作数据库的框架&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所以只有我们学完上述的技术，我们才能开发出一个麻雀虽小，五脏俱全的网站。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
